{"version":3,"sources":["datatables_renderers.min.js"],"names":["callWithJQuery","hasProp","hasOwnProperty","factory","exports","module","require","define","amd","undefined","window","ngRNDR","plugins","renderers","$","extend","jQuery","datatable","datatables_renderers","pivotData","opts","aggregator","c","colAttrs","colKey","colKeys","defaults","i","j","r","result","rowAttrs","rowKey","rowKeys","spanSize","tbody","td","tfoot","th","thead","totalAggregator","tr","txt","val","x","localeStrings","totals","meta","getRowKeys","getColKeys","document","createElement","width","widthOffset","className","join","arr","k","l","len","noDraw","ref","ref1","stop","length","call","parseInt","setAttribute","appendChild","css","innerHTML","off","on","event","e","Event","renderingEngineId","trigger","getAggregator","value","format","fn","finalize","numCols","numFixedLeftCols","numRows","postRenderOpts","returnObject","this","data","scrollY","height","heightOffset","fixedColumns","leftColumns","rightColumns","scrollX","scrollCollapse","paging","keys","dom","buttons","html","type","postRenderFunction","DataTable","heatmap","scope","colorScaleGenerator","heatmapper","n","ref2","values","max","min","Math","apply","nonRed","round","_this","colorScale","forEachCell","f","find","each","isFinite","push","elem","barchart","barcharter","scaler","text","wrapper","position","append","bottom","left","right","background-color","padding-left","padding-right","padding","padding-top","text-align","Table","pvtData","Table Barchart","Heatmap","Row Heatmap","Col Heatmap"],"mappings":"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","file":"datatables_renderers.min.js","sourcesContent":["(function() {\n    var callWithJQuery,\n        hasProp = {}.hasOwnProperty;\n\n    callWithJQuery = function(factory) {\n        if (typeof exports === \"object\" && typeof module === \"object\") {\n            return factory(require(\"jquery\"));\n        } else if (typeof define === \"function\" && define.amd) {\n            return define([\"jquery\"], factory);\n        } else {\n            if (window.ngRNDR === undefined) {\n                window.ngRNDR = {};\n                if (window.ngRNDR.plugins === undefined) {\n                    window.ngRNDR.plugins = {};\n                    if (window.ngRNDR.plugins.renderers === undefined) {\n                        window.ngRNDR.plugins.renderers = {};\n                    }\n                }\n            }\n            window.ngRNDR.plugins.renderers = $.extend({}, window.ngRNDR.plugins.renderers, factory(jQuery));\n            return window.ngRNDR.plugins.renderers;\n        }\n    };\n\n    callWithJQuery(function($) {\n        var datatable, datatables_renderers;\n        datatable = function(pivotData, opts) {\n            var aggregator, c, colAttrs, colKey, colKeys, defaults, i, j, r, result, rowAttrs, rowKey, rowKeys, spanSize, tbody, td, tfoot, th, thead, totalAggregator, tr, txt, val, x;\n            defaults = {\n                localeStrings: {\n                    totals: \"Totals\"\n                }\n            };\n            opts = $.extend(defaults, opts);\n            colAttrs = pivotData.meta.colAttrs;\n            rowAttrs = pivotData.meta.rowAttrs;\n            rowKeys = pivotData.getRowKeys();\n            colKeys = pivotData.getColKeys();\n            result = document.createElement(\"table\");\n            $(result).width(opts.width + opts.widthOffset);\n            result.className = opts[\"class\"].join(\" \");\n            thead = document.createElement(\"thead\");\n            tbody = document.createElement(\"tbody\");\n            tfoot = document.createElement(\"tfoot\");\n            spanSize = function(arr, i, j) {\n                var k, l, len, noDraw, ref, ref1, stop, x;\n                if (i !== 0) {\n                    noDraw = true;\n                    for (x = k = 0, ref = j; 0 <= ref ? k <= ref : k >= ref; x = 0 <= ref ? ++k : --k) {\n                        if (arr[i - 1][x] !== arr[i][x]) {\n                            noDraw = false;\n                        }\n                    }\n                    if (noDraw) {\n                        return -1;\n                    }\n                }\n                len = 0;\n                while (i + len < arr.length) {\n                    stop = false;\n                    for (x = l = 0, ref1 = j; 0 <= ref1 ? l <= ref1 : l >= ref1; x = 0 <= ref1 ? ++l : --l) {\n                        if (arr[i][x] !== arr[i + len][x]) {\n                            stop = true;\n                        }\n                    }\n                    if (stop) {\n                        break;\n                    }\n                    len++;\n                }\n                return len;\n            };\n            for (j in colAttrs) {\n                if (!hasProp.call(colAttrs, j)) continue;\n                c = colAttrs[j];\n                tr = document.createElement(\"tr\");\n                if (parseInt(j) === 0 && rowAttrs.length !== 0) {\n                    th = document.createElement(\"th\");\n                    th.setAttribute(\"colspan\", rowAttrs.length);\n                    th.setAttribute(\"rowspan\", colAttrs.length);\n                    tr.appendChild(th);\n                }\n                th = document.createElement(\"th\");\n                th.className = \"pvtAxisLabel\";\n                $(th).css(\"white-space\", \"nowrap\");\n                th.innerHTML = c;\n                tr.appendChild(th);\n                for (i in colKeys) {\n                    if (!hasProp.call(colKeys, i)) continue;\n                    colKey = colKeys[i];\n                    x = spanSize(colKeys, parseInt(i), parseInt(j));\n                    if (x !== -1) {\n                        th = document.createElement(\"th\");\n                        $(th).off('dblclick').on('dblclick', function(event) {\n                            var e;\n                            e = $.Event(\"colLabelDrillDownEvent\", {\n                                event: event,\n                                renderingEngineId: opts.renderingEngineId\n                            });\n                            return $(window).trigger(e);\n                        });\n                        th.className = \"pvtColLabel\";\n                        th.innerHTML = colKey[j];\n                        th.setAttribute(\"colspan\", x);\n                        if (parseInt(j) === colAttrs.length - 1 && rowAttrs.length !== 0) {\n                            th.setAttribute(\"rowspan\", 2);\n                        }\n                        tr.appendChild(th);\n                    }\n                }\n                if (parseInt(j) === 0) {\n                    th = document.createElement(\"th\");\n                    th.className = \"pvtTotalLabel\";\n                    th.innerHTML = opts.localeStrings.totals;\n                    th.setAttribute(\"rowspan\", colAttrs.length + (rowAttrs.length === 0 ? 0 : 1));\n                    tr.appendChild(th);\n                }\n                thead.appendChild(tr);\n            }\n            if (rowAttrs.length !== 0) {\n                tr = document.createElement(\"tr\");\n                for (i in rowAttrs) {\n                    if (!hasProp.call(rowAttrs, i)) continue;\n                    r = rowAttrs[i];\n                    th = document.createElement(\"th\");\n                    $(th).css(\"white-space\", \"nowrap\");\n                    th.className = \"pvtAxisLabel\";\n                    th.innerHTML = r;\n                    tr.appendChild(th);\n                }\n                th = document.createElement(\"th\");\n                if (colAttrs.length === 0) {\n                    th.className = \"pvtTotalLabel\";\n                    th.innerHTML = opts.localeStrings.totals;\n                }\n                tr.appendChild(th);\n                thead.appendChild(tr);\n            }\n            for (i in rowKeys) {\n                if (!hasProp.call(rowKeys, i)) continue;\n                rowKey = rowKeys[i];\n                tr = document.createElement(\"tr\");\n                for (j in rowKey) {\n                    if (!hasProp.call(rowKey, j)) continue;\n                    txt = rowKey[j];\n                    th = document.createElement('th');\n                    $(th).css(\"white-space\", \"nowrap\");\n                    $(th).off('dblclick').on('dblclick', function(event) {\n                        var e;\n                        e = $.Event(\"rowLabelDrillDownEvent\", {\n                            event: event,\n                            renderingEngineId: opts.renderingEngineId\n                        });\n                        return $(window).trigger(e);\n                    });\n                    th.className = 'pvtRowLabel';\n                    th.innerHTML = txt;\n                    tr.appendChild(th);\n                    if (parseInt(j) === rowAttrs.length - 1 && colAttrs.length !== 0) {\n                        tr.appendChild(document.createElement('th'));\n                    }\n                }\n                for (j in colKeys) {\n                    if (!hasProp.call(colKeys, j)) continue;\n                    colKey = colKeys[j];\n                    aggregator = pivotData.getAggregator(rowKey, colKey);\n                    val = aggregator.value();\n                    td = document.createElement(\"td\");\n                    td.className = \"pvtVal row\" + i + \" col\" + j;\n                    td.innerHTML = aggregator.format(val);\n                    td.setAttribute(\"data-value\", val);\n                    tr.appendChild(td);\n                }\n                totalAggregator = pivotData.getAggregator(rowKey, []);\n                val = totalAggregator.value();\n                td = document.createElement(\"td\");\n                td.className = \"pvtTotal rowTotal\";\n                td.innerHTML = totalAggregator.format(val);\n                td.setAttribute(\"data-value\", val);\n                td.setAttribute(\"data-for\", \"row\" + i);\n                tr.appendChild(td);\n                tbody.appendChild(tr);\n            }\n            tr = document.createElement(\"tr\");\n            th = document.createElement(\"th\");\n            th.className = \"pvtTotalLabel\";\n            th.innerHTML = opts.localeStrings.totals;\n            th.setAttribute(\"colspan\", rowAttrs.length + (colAttrs.length === 0 ? 0 : 1));\n            tr.appendChild(th);\n            for (j in colKeys) {\n                if (!hasProp.call(colKeys, j)) continue;\n                colKey = colKeys[j];\n                totalAggregator = pivotData.getAggregator([], colKey);\n                val = totalAggregator.value();\n                td = document.createElement(\"td\");\n                td.className = \"pvtTotal colTotal\";\n                td.innerHTML = totalAggregator.format(val);\n                td.setAttribute(\"data-value\", val);\n                td.setAttribute(\"data-for\", \"col\" + j);\n                tr.appendChild(td);\n            }\n            totalAggregator = pivotData.getAggregator([], []);\n            val = totalAggregator.value();\n            td = document.createElement('td');\n            td.className = 'pvtGrandTotal';\n            td.innerHTML = totalAggregator.format(val);\n            td.setAttribute(\"data-value\", val);\n            tr.appendChild(td);\n            result.appendChild(thead);\n            result.appendChild(tbody);\n            tfoot.appendChild(tr);\n            result.appendChild(tfoot);\n            result.setAttribute(\"data-numrows\", rowKeys.length);\n            result.setAttribute(\"data-numcols\", colKeys.length);\n            result.setAttribute(\"data-numcolattrs\", colAttrs.length);\n            result.setAttribute(\"data-numrowattrs\", rowAttrs.length);\n\n            return result;\n        };\n        $.fn.finalize = function(opts) {\n            var numCols, numFixedLeftCols, numRows, postRenderOpts, returnObject;\n            numRows = this.data(\"numrowattrs\");\n            numCols = this.data(\"numcolattrs\");\n            numFixedLeftCols = numRows;\n            if (numCols > 0) {\n                numFixedLeftCols = numFixedLeftCols + 1;\n            }\n            postRenderOpts = {\n                scrollY: opts.height + opts.heightOffset - ((numCols + 1) * 30),\n                fixedColumns: {\n                    leftColumns: numFixedLeftCols,\n                    rightColumns: 1\n                },\n                scrollX: true,\n                scrollCollapse: true,\n                paging: false,\n                keys: true,\n                dom: 'Bfrtip',\n                buttons: ['csvHtml5', 'pdfHtml5', 'print']\n            };\n            if (numRows !== 0 || numCols !== 0) {\n                return returnObject = {\n                    html: this.width('100%'),\n                    type: 'datatables',\n                    postRenderOpts: postRenderOpts,\n                    postRenderFunction: function(html, opts) {\n                        $(html).DataTable(opts);\n                    }\n                };\n            }\n            return returnObject = {\n                html: this,\n                type: 'datatables'\n            };\n        };\n\n        /*\n        Heatmap post-processing\n         */\n        $.fn.heatmap = function(scope, opts) {\n            var colorScaleGenerator, heatmapper, i, j, l, n, numCols, numRows, ref, ref1, ref2;\n            if (scope == null) {\n                scope = \"heatmap\";\n            }\n            numRows = this.data(\"numrows\");\n            numCols = this.data(\"numcols\");\n            colorScaleGenerator = opts != null ? (ref = opts.heatmap) != null ? ref.colorScaleGenerator : void 0 : void 0;\n            if (colorScaleGenerator == null) {\n                colorScaleGenerator = function(values) {\n                    var max, min;\n                    min = Math.min.apply(Math, values);\n                    max = Math.max.apply(Math, values);\n                    return function(x) {\n                        var nonRed;\n                        nonRed = 255 - Math.round(255 * (x - min) / (max - min));\n                        return \"rgb(255,\" + nonRed + \",\" + nonRed + \")\";\n                    };\n                };\n            }\n            heatmapper = (function(_this) {\n                return function(scope) {\n                    var colorScale, forEachCell, values;\n                    forEachCell = function(f) {\n                        return _this.find(scope).each(function() {\n                            var x;\n                            x = $(this).data(\"value\");\n                            if ((x != null) && isFinite(x)) {\n                                return f(x, $(this));\n                            }\n                        });\n                    };\n                    values = [];\n                    forEachCell(function(x) {\n                        return values.push(x);\n                    });\n                    colorScale = colorScaleGenerator(values);\n                    return forEachCell(function(x, elem) {\n                        return elem.css(\"background-color\", colorScale(x));\n                    });\n                };\n            })(this);\n            switch (scope) {\n                case \"heatmap\":\n                    heatmapper(\".pvtVal\");\n                    break;\n                case \"rowheatmap\":\n                    for (i = l = 0, ref1 = numRows; 0 <= ref1 ? l < ref1 : l > ref1; i = 0 <= ref1 ? ++l : --l) {\n                        heatmapper(\".pvtVal.row\" + i);\n                    }\n                    break;\n                case \"colheatmap\":\n                    for (j = n = 0, ref2 = numCols; 0 <= ref2 ? n < ref2 : n > ref2; j = 0 <= ref2 ? ++n : --n) {\n                        heatmapper(\".pvtVal.col\" + j);\n                    }\n            }\n            heatmapper(\".pvtTotal.rowTotal\");\n            heatmapper(\".pvtTotal.colTotal\");\n            return this;\n        };\n\n        /*\n        Barchart post-processing\n         */\n        $.fn.barchart = function() {\n            var barcharter, i, k, numCols, numRows, ref;\n            numRows = this.data(\"numrows\");\n            numCols = this.data(\"numcols\");\n            barcharter = (function(_this) {\n                return function(scope) {\n                    var forEachCell, max, scaler, values;\n                    forEachCell = function(f) {\n                        return _this.find(scope).each(function() {\n                            var x;\n                            x = $(this).data(\"value\");\n                            if ((x != null) && isFinite(x)) {\n                                return f(x, $(this));\n                            }\n                        });\n                    };\n                    values = [];\n                    forEachCell(function(x) {\n                        return values.push(x);\n                    });\n                    max = Math.max.apply(Math, values);\n                    scaler = function(x) {\n                        return 100 * x / (1.4 * max);\n                    };\n                    return forEachCell(function(x, elem) {\n                        var text, wrapper;\n                        text = elem.text();\n                        wrapper = $(\"<div>\").css({\n                            \"position\": \"relative\"\n                        });\n                        wrapper.append($(\"<div>\").css({\n                            \"position\": \"absolute\",\n                            \"bottom\": -2,\n                            \"left\": 0,\n                            \"right\": 0,\n                            \"height\": scaler(x) + \"%\",\n                            \"background-color\": \"gray\"\n                        }));\n                        wrapper.append($(\"<div>\").text(text).css({\n                            \"position\": \"relative\",\n                            \"padding-left\": \"5px\",\n                            \"padding-right\": \"5px\"\n                        }));\n                        return elem.css({\n                            \"padding\": 0,\n                            \"padding-top\": \"5px\",\n                            \"text-align\": \"center\"\n                        }).html(wrapper);\n                    });\n                };\n            })(this);\n            for (i = k = 0, ref = numRows; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {\n                barcharter(\".pvtVal.row\" + i);\n            }\n            barcharter(\".pvtTotal.colTotal\");\n            return this;\n        };\n        return datatables_renderers = {\n            \"Table\": function(pvtData, opts) {\n                return $(datatable(pvtData, opts)).finalize(opts);\n            },\n            \"Table Barchart\": function(pvtData, opts) {\n                return $(datatable(pvtData, opts)).barchart().finalize(opts);\n            },\n            \"Heatmap\": function(pvtData, opts) {\n                return $(datatable(pvtData, opts)).heatmap(\"heatmap\", opts).finalize(opts);\n            },\n            \"Row Heatmap\": function(pvtData, opts) {\n                return $(datatable(pvtData, opts)).heatmap(\"rowheatmap\", opts).finalize(opts);\n            },\n            \"Col Heatmap\": function(pvtData, opts) {\n                return $(datatable(pvtData, opts)).heatmap(\"colheatmap\", opts).finalize(opts);\n            }\n        };\n    });\n\n}).call(this);\n\n//# sourceMappingURL=datatables_renderers.js.map\n\n//# sourceMappingURL=datatables_renderers.js.map\n"]}