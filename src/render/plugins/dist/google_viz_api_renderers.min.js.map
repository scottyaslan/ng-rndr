{"version":3,"sources":["/source/google_viz_api_renderers.coffee","google_viz_api_renderers.min.js"],"names":["callWithJQuery","pivotModule","exports","module","require","define","amd","jQuery","$","makeGoogleChart","chartType","extraOptions","pivotData","opts","base","base1","colKeys","dataTable","defaults","fullAggName","h","headers","numCharsInHAxis","options","result","rowKeys","wrapper","localeStrings","vs","by","gchart","extend","width","window","innerWidth","height","innerHeight","getRowKeys","length","push","getColKeys","aggregatorName","valAttrs","join","i","len","results","unshift","formatData","css","google","visualization","ChartWrapper","draw","bind","editor","ChartEditor","events","addListener","getChartWrapper","openDialog","pivotUtilities","gchart_renderers","Line Chart","Bar Chart","Stacked Bar Chart","isStacked","Area Chart","Scatter Chart","call","this"],"mappings":"CAAA,WAAA,GAAAA,IAAAA,EAAiB,SAACC,GACd,MAAqB,gBAAXC,UAAyC,gBAAVC,QACrCF,EAAYG,QAAQ,WACC,kBAAVC,SAAyBA,OAAOC,IAC3CD,QAAQ,UAAWJ,GAGnBA,EAAYM,UAEL,SAACC,GAEZ,GAAAC,ECoEA,ODpEAA,GAAkB,SAACC,EAAWC,GCK5B,MDL6C,UAACC,EAAWC,GACvD,GAAAC,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,CAkCA,OAlCAR,IACIS,eACIC,GAAI,KACJC,GAAI,MACRC,WAEJjB,EAAOL,EAAEuB,QAAO,EAAMb,EAAUL,GCQE,OAA7BC,EAAOD,EAAKiB,QAAQE,QACvBlB,EDRUkB,MAASC,OAAOC,WAAa,KCUL,OAA/BnB,EAAQF,EAAKiB,QAAQK,SACxBpB,EDVUoB,OAAUF,OAAOG,YAAc,KAE3CX,EAAUb,EAAUyB,aACiB,IAAlBZ,EAAQa,QAA3Bb,EAAQc,SACRvB,EAAUJ,EAAU4B,aACiB,IAAlBxB,EAAQsB,QAA3BtB,EAAQuB,SACRpB,EAAcP,EAAU6B,eACrB7B,EAAU8B,SAASJ,SAClBnB,GAAe,IAAIP,EAAU8B,SAASC,KAAK,MAAM,KACrDtB,EAAA,WCgBE,GAAIuB,GAAGC,EAAKC,CAEZ,KDlBSA,KAAAF,EAAA,EAAAC,EAAApB,EAAAa,OAAAO,EAAAD,EAAAA,ICmBPxB,EAAIK,EAAQmB,GACZE,EAAQP,KDpBDnB,EAAEuB,KAAK,KCsBhB,OAAOG,MDrBTzB,EAAQ0B,QAAQ,IAEhBzB,EAAkB,EAClBL,EAAYJ,EAAKiB,OAAOkB,WAAWpC,EAAWS,EAASI,EAAST,EAASG,GAEzEI,KACAf,EAAEuB,OAAOR,EAASV,EAAKiB,OAAQnB,GAE/Ba,EAAShB,EAAE,SAASyC,KAAIjB,MAAO,OAAQG,OAAQ,SAC/CT,EAAc,GAAAwB,QAAOC,cAAcC,cAAcnC,UAAAA,EAAWP,UAAAA,EAAWa,QAAAA,IACvEG,EAAQ2B,KAAK7B,EAAO,IACpBA,EAAO8B,KAAK,WAAY,WACpB,GAAAC,ECgCF,ODhCEA,GAAa,GAAAL,QAAOC,cAAcK,YAClCN,OAAOC,cAAcM,OAAOC,YAAYH,EAAQ,KAAM,WC6BtD,MD5BIA,GAAOI,kBAAkBN,KAAK7B,EAAO,MACzC+B,EAAOK,WAAWlC,KACfF,IAEXhB,EAAEqD,eAAeC,kBACbC,aAActD,EAAgB,aAC9BuD,YAAavD,EAAgB,eAC7BwD,oBAAqBxD,EAAgB,eAAeyD,WAAW,IAC/DC,aAAc1D,EAAgB,aAAayD,WAAW,IACtDE,gBAAiB3D,EAAgB,qBCuCtC4D,KAAKC","file":"google_viz_api_renderers.min.js","sourcesContent":["callWithJQuery = (pivotModule) ->\r\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\r\n        pivotModule require(\"jquery\")\r\n    else if typeof define is \"function\" and define.amd # AMD\r\n        define [\"jquery\"], pivotModule\r\n    # Plain browser env\r\n    else\r\n        pivotModule jQuery\r\n        \r\ncallWithJQuery ($) ->\r\n\r\n    makeGoogleChart = (chartType, extraOptions) -> (pivotData, opts) ->\r\n        defaults =\r\n            localeStrings:\r\n                vs: \"vs\"\r\n                by: \"by\"\r\n            gchart: {}\r\n\r\n        opts = $.extend true, defaults, opts\r\n        opts.gchart.width ?= window.innerWidth / 1.4\r\n        opts.gchart.height ?= window.innerHeight / 1.4\r\n\r\n        rowKeys = pivotData.getRowKeys()\r\n        rowKeys.push [] if rowKeys.length == 0\r\n        colKeys = pivotData.getColKeys()\r\n        colKeys.push [] if colKeys.length == 0\r\n        fullAggName = pivotData.aggregatorName \r\n        if pivotData.valAttrs.length\r\n            fullAggName += \"(#{pivotData.valAttrs.join(\", \")})\"\r\n        headers = (h.join(\"-\") for h in rowKeys)\r\n        headers.unshift \"\"\r\n\r\n        numCharsInHAxis = 0\r\n        dataTable = opts.gchart.formatData(pivotData, headers, rowKeys, colKeys, fullAggName);\r\n        \r\n        options = {}\r\n        $.extend options, opts.gchart, extraOptions\r\n\r\n        result = $(\"<div>\").css(width: \"100%\", height: \"100%\")\r\n        wrapper = new google.visualization.ChartWrapper {dataTable, chartType, options}\r\n        wrapper.draw(result[0])    \r\n        result.bind \"dblclick\", -> \r\n            editor = new google.visualization.ChartEditor()\r\n            google.visualization.events.addListener editor, 'ok', -> \r\n                editor.getChartWrapper().draw(result[0])\r\n            editor.openDialog(wrapper)\r\n        return result\r\n\r\n    $.pivotUtilities.gchart_renderers = \r\n        \"Line Chart\": makeGoogleChart(\"LineChart\")\r\n        \"Bar Chart\": makeGoogleChart(\"ColumnChart\")\r\n        \"Stacked Bar Chart\": makeGoogleChart(\"ColumnChart\", isStacked: true)\r\n        \"Area Chart\": makeGoogleChart(\"AreaChart\", isStacked: true)\r\n        \"Scatter Chart\": makeGoogleChart(\"ScatterChart\")\r\n","(function() {\n  var callWithJQuery;\n\n  callWithJQuery = function(pivotModule) {\n    if (typeof exports === \"object\" && typeof module === \"object\") {\n      return pivotModule(require(\"jquery\"));\n    } else if (typeof define === \"function\" && define.amd) {\n      return define([\"jquery\"], pivotModule);\n    } else {\n      return pivotModule(jQuery);\n    }\n  };\n\n  callWithJQuery(function($) {\n    var makeGoogleChart;\n    makeGoogleChart = function(chartType, extraOptions) {\n      return function(pivotData, opts) {\n        var base, base1, colKeys, dataTable, defaults, fullAggName, h, headers, numCharsInHAxis, options, result, rowKeys, wrapper;\n        defaults = {\n          localeStrings: {\n            vs: \"vs\",\n            by: \"by\"\n          },\n          gchart: {}\n        };\n        opts = $.extend(true, defaults, opts);\n        if ((base = opts.gchart).width == null) {\n          base.width = window.innerWidth / 1.4;\n        }\n        if ((base1 = opts.gchart).height == null) {\n          base1.height = window.innerHeight / 1.4;\n        }\n        rowKeys = pivotData.getRowKeys();\n        if (rowKeys.length === 0) {\n          rowKeys.push([]);\n        }\n        colKeys = pivotData.getColKeys();\n        if (colKeys.length === 0) {\n          colKeys.push([]);\n        }\n        fullAggName = pivotData.aggregatorName;\n        if (pivotData.valAttrs.length) {\n          fullAggName += \"(\" + (pivotData.valAttrs.join(\", \")) + \")\";\n        }\n        headers = (function() {\n          var i, len, results;\n          results = [];\n          for (i = 0, len = rowKeys.length; i < len; i++) {\n            h = rowKeys[i];\n            results.push(h.join(\"-\"));\n          }\n          return results;\n        })();\n        headers.unshift(\"\");\n        numCharsInHAxis = 0;\n        dataTable = opts.gchart.formatData(pivotData, headers, rowKeys, colKeys, fullAggName);\n        options = {};\n        $.extend(options, opts.gchart, extraOptions);\n        result = $(\"<div>\").css({\n          width: \"100%\",\n          height: \"100%\"\n        });\n        wrapper = new google.visualization.ChartWrapper({\n          dataTable: dataTable,\n          chartType: chartType,\n          options: options\n        });\n        wrapper.draw(result[0]);\n        result.bind(\"dblclick\", function() {\n          var editor;\n          editor = new google.visualization.ChartEditor();\n          google.visualization.events.addListener(editor, 'ok', function() {\n            return editor.getChartWrapper().draw(result[0]);\n          });\n          return editor.openDialog(wrapper);\n        });\n        return result;\n      };\n    };\n    return $.pivotUtilities.gchart_renderers = {\n      \"Line Chart\": makeGoogleChart(\"LineChart\"),\n      \"Bar Chart\": makeGoogleChart(\"ColumnChart\"),\n      \"Stacked Bar Chart\": makeGoogleChart(\"ColumnChart\", {\n        isStacked: true\n      }),\n      \"Area Chart\": makeGoogleChart(\"AreaChart\", {\n        isStacked: true\n      }),\n      \"Scatter Chart\": makeGoogleChart(\"ScatterChart\")\n    };\n  });\n\n}).call(this);\n\n//# sourceMappingURL=google_viz_api_renderers.js.map\n"],"sourceRoot":"/source/"}