{"version":3,"sources":["datatables_renderers.coffee"],"names":[],"mappings":"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","file":"datatables_renderers.js","sourceRoot":"/source/","sourcesContent":["###\r\n    Data Analytics Toolkit: Explore any data avaialable through a REST service \r\n    Copyright (C) 2016  Scott Aslan\r\n\r\n    This program is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Affero General Public License as\r\n    published by the Free Software Foundation, either version 3 of the\r\n    License, or (at your option) any later version.\r\n\r\n    This program is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Affero General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Affero General Public License\r\n    along with this program.  If not, see <http://www.gnu.org/licenses/agpl.html>.\r\n###\r\ncallWithJQuery = (pivotModule) ->\r\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\r\n        pivotModule require(\"jquery\")\r\n    else if typeof define is \"function\" and define.amd # AMD\r\n        define [\"jquery\"], pivotModule\r\n    # Plain browser env\r\n    else\r\n        pivotModule jQuery\r\n        \r\ncallWithJQuery ($) ->\r\n    \r\n    datatable = (pivotData, opts) ->\r\n        defaults =\r\n            localeStrings:\r\n                totals: \"Totals\"\r\n\r\n        opts = $.extend defaults, opts\r\n\r\n        colAttrs = pivotData.colAttrs\r\n        rowAttrs = pivotData.rowAttrs\r\n        rowKeys = pivotData.getRowKeys()\r\n        colKeys = pivotData.getColKeys()\r\n\r\n        #now actually build the output\r\n        result = document.createElement(\"table\")\r\n        $(result).width(opts.datatables.width)\r\n        result.className = opts.datatables.class.join(\" \")\r\n        thead = document.createElement(\"thead\")\r\n        tbody = document.createElement(\"tbody\")\r\n        tfoot = document.createElement(\"tfoot\")\r\n\r\n        #helper function for setting row/col-span in pivotTableRenderer\r\n        spanSize = (arr, i, j) ->\r\n            if i != 0\r\n                noDraw = true\r\n                for x in [0..j]\r\n                    if arr[i-1][x] != arr[i][x]\r\n                        noDraw = false\r\n                if noDraw\r\n                  return -1 #do not draw cell\r\n            len = 0\r\n            while i+len < arr.length\r\n                stop = false\r\n                for x in [0..j]\r\n                    stop = true if arr[i][x] != arr[i+len][x]\r\n                break if stop\r\n                len++\r\n            return len\r\n\r\n        #the first few rows are for col headers\r\n        for own j, c of colAttrs\r\n            tr = document.createElement(\"tr\")\r\n            if parseInt(j) == 0 and rowAttrs.length != 0\r\n                th = document.createElement(\"th\")\r\n                th.setAttribute(\"colspan\", rowAttrs.length)\r\n                th.setAttribute(\"rowspan\", colAttrs.length)\r\n                tr.appendChild th\r\n            th = document.createElement(\"th\")\r\n            th.className = \"pvtAxisLabel\"\r\n            $(th).css(\"white-space\", \"nowrap\")\r\n            th.innerHTML = c\r\n            tr.appendChild th\r\n            for own i, colKey of colKeys\r\n                x = spanSize(colKeys, parseInt(i), parseInt(j))\r\n                if x != -1\r\n                    th = document.createElement(\"th\")\r\n                    $(th).off('dblclick').on 'dblclick', (event) ->\r\n                        # Create a new jQuery.Event object with specified event properties.\r\n                        e = $.Event( \"colLabelDrillDownEvent\", { event: event, renderingEngineId: opts.renderingEngineId } );\r\n                        $(window).trigger( e );\r\n                    th.className = \"pvtColLabel\"\r\n                    th.innerHTML = colKey[j]\r\n                    th.setAttribute(\"colspan\", x)\r\n                    if parseInt(j) == colAttrs.length-1 and rowAttrs.length != 0\r\n                        th.setAttribute(\"rowspan\", 2)\r\n                    tr.appendChild th\r\n            if parseInt(j) == 0\r\n                th = document.createElement(\"th\")\r\n                th.className = \"pvtTotalLabel\"\r\n                th.innerHTML = opts.localeStrings.totals\r\n                th.setAttribute(\"rowspan\", colAttrs.length + (if rowAttrs.length ==0 then 0 else 1))\r\n                tr.appendChild th\r\n            thead.appendChild tr\r\n\r\n        #then a row for row header headers\r\n        if rowAttrs.length !=0\r\n            tr = document.createElement(\"tr\")\r\n            for own i, r of rowAttrs\r\n                th = document.createElement(\"th\")\r\n                $(th).css(\"white-space\", \"nowrap\")\r\n                th.className = \"pvtAxisLabel\"\r\n                th.innerHTML = r\r\n                tr.appendChild th \r\n            th = document.createElement(\"th\")\r\n            if colAttrs.length ==0\r\n                th.className = \"pvtTotalLabel\"\r\n                th.innerHTML = opts.localeStrings.totals\r\n            tr.appendChild th\r\n            thead.appendChild tr\r\n\r\n        #now the actual data rows, with their row headers and totals\r\n        for own i, rowKey of rowKeys\r\n            tr = document.createElement(\"tr\")\r\n            for own j, txt of rowKey\r\n                th = document.createElement('th')\r\n                $(th).css(\"white-space\", \"nowrap\")\r\n                $(th).off('dblclick').on 'dblclick', (event) ->\r\n                    # Create a new jQuery.Event object with specified event properties.\r\n                    e = $.Event( \"rowLabelDrillDownEvent\", { event: event, renderingEngineId: opts.renderingEngineId } );\r\n                    $(window).trigger( e );\r\n                th.className = 'pvtRowLabel'\r\n                th.innerHTML = txt\r\n                tr.appendChild th\r\n                if parseInt(j) == rowAttrs.length-1 and colAttrs.length !=0\r\n                    tr.appendChild document.createElement('th')\r\n            for own j, colKey of colKeys #this is the tight loop\r\n                aggregator = pivotData.getAggregator(rowKey, colKey)\r\n                val = aggregator.value()\r\n                td = document.createElement(\"td\")\r\n                td.className = \"pvtVal row#{i} col#{j}\"\r\n                td.innerHTML = aggregator.format(val)\r\n                td.setAttribute(\"data-value\", val)\r\n                tr.appendChild td\r\n\r\n            totalAggregator = pivotData.getAggregator(rowKey, [])\r\n            val = totalAggregator.value()\r\n            td = document.createElement(\"td\")\r\n            td.className = \"pvtTotal rowTotal\"\r\n            td.innerHTML = totalAggregator.format(val)\r\n            td.setAttribute(\"data-value\", val)\r\n            td.setAttribute(\"data-for\", \"row\"+i)\r\n            tr.appendChild td\r\n            tbody.appendChild tr\r\n\r\n        #finally, the row for col totals, and a grand total\r\n        tr = document.createElement(\"tr\")\r\n        th = document.createElement(\"th\")\r\n        th.className = \"pvtTotalLabel\"\r\n        th.innerHTML = opts.localeStrings.totals\r\n        th.setAttribute(\"colspan\", rowAttrs.length + (if colAttrs.length == 0 then 0 else 1))\r\n        tr.appendChild th\r\n        for own j, colKey of colKeys\r\n            totalAggregator = pivotData.getAggregator([], colKey)\r\n            val = totalAggregator.value()\r\n            td = document.createElement(\"td\")\r\n            td.className = \"pvtTotal colTotal\"\r\n            td.innerHTML = totalAggregator.format(val)\r\n            td.setAttribute(\"data-value\", val)\r\n            td.setAttribute(\"data-for\", \"col\"+j)\r\n            tr.appendChild td\r\n        totalAggregator = pivotData.getAggregator([], [])\r\n        val = totalAggregator.value()\r\n        td = document.createElement('td')\r\n        td.className = 'pvtGrandTotal'\r\n        td.innerHTML = totalAggregator.format(val)\r\n        td.setAttribute(\"data-value\", val)\r\n        tr.appendChild td\r\n        result.appendChild thead\r\n        result.appendChild tbody\r\n        tfoot.appendChild tr\r\n        result.appendChild tfoot\r\n\r\n        #squirrel this away for later\r\n        result.setAttribute(\"data-numrows\", rowKeys.length)\r\n        result.setAttribute(\"data-numcols\", colKeys.length)\r\n\r\n        return result\r\n    \r\n    $.fn.finalize = (opts)  ->\r\n        numRows = opts.numRows\r\n        numCols = opts.numCols\r\n        \r\n        numFixedLeftCols = numRows\r\n        if numCols > 0\r\n          numFixedLeftCols = numFixedLeftCols + 1\r\n            \r\n        postRenderOpts = \r\n          scrollY: opts['datatables'].height\r\n          fixedColumns:\r\n            leftColumns: numFixedLeftCols\r\n            rightColumns: 1\r\n          scrollX: true\r\n          scrollCollapse: true\r\n          paging: false\r\n          keys: true\r\n          dom: 'Bfrtip'\r\n          buttons: [\r\n            'csvHtml5'\r\n            'pdfHtml5'\r\n            'print'\r\n          ]\r\n    \r\n        if numRows != 0 or numCols != 0\r\n            return returnObject = \r\n                html: this.width('100%') #DataTables needs the table to be 100% wide\r\n                type: 'datatables'\r\n                postRenderOpts: postRenderOpts\r\n                postRenderFunction: (html, opts) ->\r\n                    $(html).DataTable(opts)\r\n                    return\r\n        \r\n        return returnObject = \r\n                html: this\r\n                type: 'datatables'\r\n    \r\n    \r\n    ###\r\n    Heatmap post-processing\r\n    ###\r\n\r\n    $.fn.heatmap = (scope = \"heatmap\") ->\r\n        numRows = @data \"numrows\"\r\n        numCols = @data \"numcols\"\r\n\r\n        colorGen = (color, min, max) ->\r\n            hexGen = switch color\r\n                when \"red\"   then (hex) -> \"ff#{hex}#{hex}\"\r\n                when \"green\" then (hex) -> \"#{hex}ff#{hex}\"\r\n                when \"blue\"  then (hex) -> \"#{hex}#{hex}ff\"\r\n\r\n            return (x) ->\r\n                intensity = 255 - Math.round 255*(x-min)/(max-min)\r\n                hex = intensity.toString(16).split(\".\")[0]\r\n                hex = 0+hex if hex.length == 1\r\n                return hexGen(hex)\r\n\r\n        heatmapper = (scope, color) =>\r\n            forEachCell = (f) =>\r\n                @find(scope).each ->\r\n                    x = $(this).data(\"value\")\r\n                    f(x, $(this)) if x? and isFinite(x)\r\n\r\n            values = []\r\n            forEachCell (x) -> values.push x\r\n            colorFor = colorGen color, Math.min(values...), Math.max(values...)\r\n            forEachCell (x, elem) -> elem.css \"background-color\", \"#\" + colorFor(x)\r\n\r\n        switch scope\r\n            when \"heatmap\"\r\n                heatmapper \".pvtVal\", \"red\"\r\n            when \"rowheatmap\"\r\n                heatmapper \".pvtVal.row#{i}\", \"red\" for i in [0...numRows]\r\n            when \"colheatmap\"\r\n                heatmapper \".pvtVal.col#{j}\", \"red\" for j in [0...numCols]\r\n\r\n        heatmapper \".pvtTotal.rowTotal\", \"red\"\r\n        heatmapper \".pvtTotal.colTotal\", \"red\"\r\n\r\n        return this\r\n\r\n    ###\r\n    Barchart post-processing\r\n    ###\r\n\r\n    $.fn.barchart =  ->\r\n        numRows = @data \"numrows\"\r\n        numCols = @data \"numcols\"\r\n\r\n        barcharter = (scope) =>\r\n            forEachCell = (f) =>\r\n                @find(scope).each ->\r\n                    x = $(this).data(\"value\")\r\n                    f(x, $(this)) if x? and isFinite(x)\r\n\r\n            values = []\r\n            forEachCell (x) -> values.push x\r\n            max = Math.max(values...)\r\n            scaler = (x) -> 100*x/(1.4*max)\r\n            forEachCell (x, elem) ->\r\n                text = elem.text()\r\n                wrapper = $(\"<div>\").css\r\n                    \"position\": \"relative\"\r\n                wrapper.append $(\"<div>\").css\r\n                    \"position\": \"absolute\"\r\n                    \"bottom\": -2\r\n                    \"left\": 0\r\n                    \"right\": 0\r\n                    \"height\": scaler(x) + \"%\"\r\n                    \"background-color\": \"gray\"\r\n                wrapper.append $(\"<div>\").text(text).css\r\n                    \"position\":\"relative\"\r\n                    \"padding-left\":\"5px\"\r\n                    \"padding-right\":\"5px\"\r\n\r\n                elem.css(\"padding\": 0,\"padding-top\": \"5px\", \"text-align\": \"center\").html wrapper\r\n\r\n        barcharter \".pvtVal.row#{i}\" for i in [0...numRows]\r\n        barcharter \".pvtTotal.colTotal\"\r\n\r\n        return this\r\n    \r\n    datatables_renderers =\r\n        \"Table\":          (pvtData, opts) ->   $(datatable(pvtData, opts)).finalize(opts)\r\n        \"Table Barchart\": (pvtData, opts) -> $(datatable(pvtData, opts)).barchart().finalize(opts)\r\n        \"Heatmap\":        (pvtData, opts) -> $(datatable(pvtData, opts)).heatmap().finalize(opts)\r\n        \"Row Heatmap\":    (pvtData, opts) -> $(datatable(pvtData, opts)).heatmap(\"rowheatmap\").finalize(opts)\r\n        \"Col Heatmap\":    (pvtData, opts) -> $(datatable(pvtData, opts)).heatmap(\"colheatmap\").finalize(opts)"]}