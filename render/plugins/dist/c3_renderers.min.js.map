{"version":3,"sources":["/source/c3_renderers.coffee","c3_renderers.min.js"],"names":["callWithJQuery","pivotModule","exports","module","require","define","amd","jQuery","c3","$","c3_renderers","makeC3Chart","chartOpts","pivotData","opts","agg","base","base1","base2","colKey","colKeys","columns","dataArray","datum","defaults","fullAggName","groupByTitle","h","hAxisTitle","headers","i","j","k","len","len1","len2","numCharsInHAxis","params","ref","renderArea","result","returnObject","rotationAngle","row","rowHeader","rowKey","rowKeys","title","titleText","tree2","vAxisTitle","val","x","y","localeStrings","vs","by","extend","size","width","window","innerWidth","height","innerHeight","type","getRowKeys","length","push","getColKeys","results","join","aggregatorName","valAttrs","colAttrs","rowAttrs","tree","parseFloat","format","value","getAggregator","isFinite","toPrecision","toFixed","style","text","axis","label","tick","rotate","multiline","data","tooltip","grouped","color","pattern","fit","json","keys","legend","show","name","a","b","c","d","categories","stacked","groups","l","len3","appendTo","bindto","generate","detach","remove","append","html","C3 - Line Chart","C3 - Bar Chart","C3 - Stacked Bar Chart","C3 - Area Chart","C3 - Scatter Chart","call","this"],"mappings":"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","file":"c3_renderers.min.js","sourcesContent":["callWithJQuery = (pivotModule) ->\r\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\r\n        pivotModule require(\"jquery\"), require(\"c3\")\r\n    else if typeof define is \"function\" and define.amd # AMD\r\n        define [\"jquery\", \"c3\"], pivotModule\r\n    # Plain browser env\r\n    else\r\n        pivotModule jQuery, c3\r\n        \r\ncallWithJQuery ($, c3) ->\r\n\r\n    makeC3Chart = (chartOpts = {}) -> (pivotData, opts) ->\r\n        defaults =\r\n            localeStrings:\r\n                vs: \"vs\"\r\n                by: \"by\"\r\n            c3: {}\r\n\r\n        opts = $.extend true, defaults, opts\r\n        opts.c3.size ?= {}\r\n        opts.c3.size.width ?= window.innerWidth / 1.4\r\n        opts.c3.size.height ?= window.innerHeight / 1.4 - 50\r\n        chartOpts.type ?= \"line\"\r\n\r\n        rowKeys = pivotData.getRowKeys()\r\n        rowKeys.push [] if rowKeys.length == 0\r\n        colKeys = pivotData.getColKeys()\r\n        colKeys.push [] if colKeys.length == 0\r\n\r\n        headers = (h.join(\"-\") for h in colKeys)\r\n        rotationAngle = 0\r\n\r\n        fullAggName = pivotData.aggregatorName \r\n        if pivotData.valAttrs.length\r\n            fullAggName += \"(#{pivotData.valAttrs.join(\", \")})\"\r\n\r\n        if chartOpts.type == \"scatter\"\r\n            dataArray = []\r\n            hAxisTitle = pivotData.colAttrs.join(\"-\")\r\n            vAxisTitle = pivotData.rowAttrs.join(\"-\")\r\n            for y, tree2 of pivotData.tree\r\n                for x, agg of tree2\r\n                    datum = {}\r\n                    datum[hAxisTitle] = parseFloat(x)\r\n                    datum[vAxisTitle] = parseFloat(y)\r\n                    datum[\"tooltip\"] = agg.format(agg.value())\r\n                    dataArray.push datum\r\n        else\r\n            numCharsInHAxis = 0\r\n            for x in headers\r\n                numCharsInHAxis += x.length\r\n            if numCharsInHAxis > 50\r\n                rotationAngle = 45\r\n\r\n            columns = []\r\n            for rowKey in rowKeys\r\n                rowHeader = rowKey.join(\"-\")\r\n                row = [if rowHeader == \"\" then pivotData.aggregatorName else rowHeader]\r\n                for colKey in colKeys\r\n                    val = parseFloat  pivotData.getAggregator(rowKey, colKey).value()\r\n                    if isFinite(val)\r\n                        if val < 1\r\n                            row.push val.toPrecision(3)\r\n                        else\r\n                            row.push val.toFixed(3)\r\n                    else\r\n                        row.push null\r\n                columns.push row\r\n\r\n            vAxisTitle = pivotData.aggregatorName+ \r\n                if pivotData.valAttrs.length then \"(#{pivotData.valAttrs.join(\", \")})\" else \"\"\r\n            hAxisTitle = pivotData.colAttrs.join(\"-\")\r\n\r\n        titleText = fullAggName\r\n        titleText += \" #{opts.localeStrings.vs} #{hAxisTitle}\" if hAxisTitle != \"\"\r\n        groupByTitle = pivotData.rowAttrs.join(\"-\")\r\n        titleText += \" #{opts.localeStrings.by} #{groupByTitle}\" if groupByTitle != \"\"\r\n        title = $(\"<p>\", {style: \"text-align: center; font-weight: bold\"})\r\n        title.text(titleText)\r\n\r\n        params = \r\n            axis: \r\n                y:\r\n                    label: vAxisTitle\r\n                x:\r\n                    label: hAxisTitle\r\n                    tick:\r\n                        rotate: rotationAngle\r\n                        multiline: false\r\n            data: \r\n                type: chartOpts.type\r\n            tooltip:\r\n                grouped: false\r\n            color: \r\n                pattern: [ \"#3366cc\", \"#dc3912\", \"#ff9900\", \"#109618\",\r\n                           \"#990099\", \"#0099c6\", \"#dd4477\", \"#66aa00\",\r\n                           \"#b82e2e\", \"#316395\", \"#994499\", \"#22aa99\",\r\n                           \"#aaaa11\", \"#6633cc\", \"#e67300\", \"#8b0707\",\r\n                           \"#651067\", \"#329262\", \"#5574a6\", \"#3b3eac\" ]\r\n\r\n\r\n        $.extend params, opts.c3\r\n\r\n        if chartOpts.type == \"scatter\"\r\n            params.data.x = hAxisTitle\r\n            params.axis.x.tick = fit: false\r\n            params.data.json = dataArray\r\n            params.data.keys = value: [hAxisTitle,vAxisTitle]\r\n            params.legend = show: false \r\n            params.tooltip.format =  \r\n                title: -> fullAggName\r\n                name: -> \"\"\r\n                value: (a,b,c,d) -> dataArray[d].tooltip\r\n        else\r\n            params.axis.x.type= 'category'\r\n            params.axis.x.categories = headers\r\n            params.data.columns = columns\r\n\r\n\r\n        if chartOpts.stacked?\r\n            params.data.groups = [x.join(\"-\") for x in rowKeys]\r\n        renderArea = $(\"<div>\", style: \"display:none;\").appendTo $(\"body\")\r\n        result = $(\"<div>\").appendTo renderArea\r\n        params.bindto = result[0]\r\n        c3.generate params\r\n        result.detach()\r\n        renderArea.remove()\r\n        $(\"<div>\").append title, result\r\n        return returnObject = \r\n                html: result\r\n\r\n    c3_renderers = \r\n        \"C3 - Line Chart\": makeC3Chart()\r\n        \"C3 - Bar Chart\": makeC3Chart(type: \"bar\")\r\n        \"C3 - Stacked Bar Chart\": makeC3Chart(type: \"bar\", stacked: true)\r\n        \"C3 - Area Chart\": makeC3Chart(type: \"area\", stacked: true)\r\n        \"C3 - Scatter Chart\": makeC3Chart(type: \"scatter\")\r\n","(function() {\n  var callWithJQuery;\n\n  callWithJQuery = function(pivotModule) {\n    if (typeof exports === \"object\" && typeof module === \"object\") {\n      return pivotModule(require(\"jquery\"), require(\"c3\"));\n    } else if (typeof define === \"function\" && define.amd) {\n      return define([\"jquery\", \"c3\"], pivotModule);\n    } else {\n      return pivotModule(jQuery, c3);\n    }\n  };\n\n  callWithJQuery(function($, c3) {\n    var c3_renderers, makeC3Chart;\n    makeC3Chart = function(chartOpts) {\n      if (chartOpts == null) {\n        chartOpts = {};\n      }\n      return function(pivotData, opts) {\n        var agg, base, base1, base2, colKey, colKeys, columns, dataArray, datum, defaults, fullAggName, groupByTitle, h, hAxisTitle, headers, i, j, k, len, len1, len2, numCharsInHAxis, params, ref, renderArea, result, returnObject, rotationAngle, row, rowHeader, rowKey, rowKeys, title, titleText, tree2, vAxisTitle, val, x, y;\n        defaults = {\n          localeStrings: {\n            vs: \"vs\",\n            by: \"by\"\n          },\n          c3: {}\n        };\n        opts = $.extend(true, defaults, opts);\n        if ((base = opts.c3).size == null) {\n          base.size = {};\n        }\n        if ((base1 = opts.c3.size).width == null) {\n          base1.width = window.innerWidth / 1.4;\n        }\n        if ((base2 = opts.c3.size).height == null) {\n          base2.height = window.innerHeight / 1.4 - 50;\n        }\n        if (chartOpts.type == null) {\n          chartOpts.type = \"line\";\n        }\n        rowKeys = pivotData.getRowKeys();\n        if (rowKeys.length === 0) {\n          rowKeys.push([]);\n        }\n        colKeys = pivotData.getColKeys();\n        if (colKeys.length === 0) {\n          colKeys.push([]);\n        }\n        headers = (function() {\n          var i, len, results;\n          results = [];\n          for (i = 0, len = colKeys.length; i < len; i++) {\n            h = colKeys[i];\n            results.push(h.join(\"-\"));\n          }\n          return results;\n        })();\n        rotationAngle = 0;\n        fullAggName = pivotData.aggregatorName;\n        if (pivotData.valAttrs.length) {\n          fullAggName += \"(\" + (pivotData.valAttrs.join(\", \")) + \")\";\n        }\n        if (chartOpts.type === \"scatter\") {\n          dataArray = [];\n          hAxisTitle = pivotData.colAttrs.join(\"-\");\n          vAxisTitle = pivotData.rowAttrs.join(\"-\");\n          ref = pivotData.tree;\n          for (y in ref) {\n            tree2 = ref[y];\n            for (x in tree2) {\n              agg = tree2[x];\n              datum = {};\n              datum[hAxisTitle] = parseFloat(x);\n              datum[vAxisTitle] = parseFloat(y);\n              datum[\"tooltip\"] = agg.format(agg.value());\n              dataArray.push(datum);\n            }\n          }\n        } else {\n          numCharsInHAxis = 0;\n          for (i = 0, len = headers.length; i < len; i++) {\n            x = headers[i];\n            numCharsInHAxis += x.length;\n          }\n          if (numCharsInHAxis > 50) {\n            rotationAngle = 45;\n          }\n          columns = [];\n          for (j = 0, len1 = rowKeys.length; j < len1; j++) {\n            rowKey = rowKeys[j];\n            rowHeader = rowKey.join(\"-\");\n            row = [rowHeader === \"\" ? pivotData.aggregatorName : rowHeader];\n            for (k = 0, len2 = colKeys.length; k < len2; k++) {\n              colKey = colKeys[k];\n              val = parseFloat(pivotData.getAggregator(rowKey, colKey).value());\n              if (isFinite(val)) {\n                if (val < 1) {\n                  row.push(val.toPrecision(3));\n                } else {\n                  row.push(val.toFixed(3));\n                }\n              } else {\n                row.push(null);\n              }\n            }\n            columns.push(row);\n          }\n          vAxisTitle = pivotData.aggregatorName + (pivotData.valAttrs.length ? \"(\" + (pivotData.valAttrs.join(\", \")) + \")\" : \"\");\n          hAxisTitle = pivotData.colAttrs.join(\"-\");\n        }\n        titleText = fullAggName;\n        if (hAxisTitle !== \"\") {\n          titleText += \" \" + opts.localeStrings.vs + \" \" + hAxisTitle;\n        }\n        groupByTitle = pivotData.rowAttrs.join(\"-\");\n        if (groupByTitle !== \"\") {\n          titleText += \" \" + opts.localeStrings.by + \" \" + groupByTitle;\n        }\n        title = $(\"<p>\", {\n          style: \"text-align: center; font-weight: bold\"\n        });\n        title.text(titleText);\n        params = {\n          axis: {\n            y: {\n              label: vAxisTitle\n            },\n            x: {\n              label: hAxisTitle,\n              tick: {\n                rotate: rotationAngle,\n                multiline: false\n              }\n            }\n          },\n          data: {\n            type: chartOpts.type\n          },\n          tooltip: {\n            grouped: false\n          },\n          color: {\n            pattern: [\"#3366cc\", \"#dc3912\", \"#ff9900\", \"#109618\", \"#990099\", \"#0099c6\", \"#dd4477\", \"#66aa00\", \"#b82e2e\", \"#316395\", \"#994499\", \"#22aa99\", \"#aaaa11\", \"#6633cc\", \"#e67300\", \"#8b0707\", \"#651067\", \"#329262\", \"#5574a6\", \"#3b3eac\"]\n          }\n        };\n        $.extend(params, opts.c3);\n        if (chartOpts.type === \"scatter\") {\n          params.data.x = hAxisTitle;\n          params.axis.x.tick = {\n            fit: false\n          };\n          params.data.json = dataArray;\n          params.data.keys = {\n            value: [hAxisTitle, vAxisTitle]\n          };\n          params.legend = {\n            show: false\n          };\n          params.tooltip.format = {\n            title: function() {\n              return fullAggName;\n            },\n            name: function() {\n              return \"\";\n            },\n            value: function(a, b, c, d) {\n              return dataArray[d].tooltip;\n            }\n          };\n        } else {\n          params.axis.x.type = 'category';\n          params.axis.x.categories = headers;\n          params.data.columns = columns;\n        }\n        if (chartOpts.stacked != null) {\n          params.data.groups = [\n            (function() {\n              var l, len3, results;\n              results = [];\n              for (l = 0, len3 = rowKeys.length; l < len3; l++) {\n                x = rowKeys[l];\n                results.push(x.join(\"-\"));\n              }\n              return results;\n            })()\n          ];\n        }\n        renderArea = $(\"<div>\", {\n          style: \"display:none;\"\n        }).appendTo($(\"body\"));\n        result = $(\"<div>\").appendTo(renderArea);\n        params.bindto = result[0];\n        c3.generate(params);\n        result.detach();\n        renderArea.remove();\n        $(\"<div>\").append(title, result);\n        return returnObject = {\n          html: result\n        };\n      };\n    };\n    return c3_renderers = {\n      \"C3 - Line Chart\": makeC3Chart(),\n      \"C3 - Bar Chart\": makeC3Chart({\n        type: \"bar\"\n      }),\n      \"C3 - Stacked Bar Chart\": makeC3Chart({\n        type: \"bar\",\n        stacked: true\n      }),\n      \"C3 - Area Chart\": makeC3Chart({\n        type: \"area\",\n        stacked: true\n      }),\n      \"C3 - Scatter Chart\": makeC3Chart({\n        type: \"scatter\"\n      })\n    };\n  });\n\n}).call(this);\n\n//# sourceMappingURL=c3_renderers.js.map\n"],"sourceRoot":"/source/"}