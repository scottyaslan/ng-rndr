{"version":3,"sources":["/source/ngchart_directive_renderers.coffee","ngchart_directive_renderers.min.js"],"names":["callWithJQuery","pivotModule","exports","module","require","define","amd","jQuery","$","makeGoogleChart","ngchart_directive_renderers","chartType","extraOptions","pivotData","opts","agg","base","base1","colKey","colKeys","dataArray","dataTable","defaults","fullAggName","groupByTitle","h","hAxisTitle","headers","i","j","len","len1","numCharsInHAxis","options","ref","result","row","rowKey","rowKeys","title","tree2","vAxisTitle","val","x","y","localeStrings","vs","by","gchart","extend","width","window","innerWidth","height","innerHeight","getRowKeys","length","push","getColKeys","aggregatorName","valAttrs","join","results","unshift","tree","parseFloat","format","value","google","visualization","DataTable","addColumn","colAttrs","rowAttrs","type","role","addRows","getAggregator","isNumeric","toPrecision","toFixed","arrayToDataTable","hAxis","slantedText","vAxis","tooltip","textStyle","fontName","fontSize","minValue","legend","position","chartArea","html","isDirective","chart","data","Line Chart","Bar Chart","Stacked Bar Chart","isStacked","Area Chart","Scatter Chart","call","this"],"mappings":"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","file":"ngchart_directive_renderers.min.js","sourcesContent":["callWithJQuery = (pivotModule) ->\r\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\r\n        pivotModule require(\"jquery\")\r\n    else if typeof define is \"function\" and define.amd # AMD\r\n        define [\"jquery\"], pivotModule\r\n    # Plain browser env\r\n    else\r\n        pivotModule jQuery\r\n        \r\ncallWithJQuery ($) ->\r\n\r\n    makeGoogleChart = (chartType, extraOptions) -> (pivotData, opts) ->\r\n        defaults =\r\n            localeStrings:\r\n                vs: \"vs\"\r\n                by: \"by\"\r\n            gchart: {}\r\n\r\n        opts = $.extend true, defaults, opts\r\n        opts.gchart.width ?= window.innerWidth / 1.4\r\n        opts.gchart.height ?= window.innerHeight / 1.4\r\n\r\n        rowKeys = pivotData.getRowKeys()\r\n        rowKeys.push [] if rowKeys.length == 0\r\n        colKeys = pivotData.getColKeys()\r\n        colKeys.push [] if colKeys.length == 0\r\n        fullAggName = pivotData.aggregatorName \r\n        if pivotData.valAttrs.length\r\n            fullAggName += \"(#{pivotData.valAttrs.join(\", \")})\"\r\n        headers = (h.join(\"-\") for h in rowKeys)\r\n        headers.unshift \"\"\r\n\r\n        numCharsInHAxis = 0\r\n        if chartType == \"ScatterChart\"\r\n            dataArray = []\r\n            for y, tree2 of pivotData.tree\r\n                for x, agg of tree2\r\n                     dataArray.push [\r\n                        parseFloat(x),\r\n                        parseFloat(y),\r\n                        fullAggName+\": \\n\"+agg.format(agg.value())\r\n                        ]\r\n            dataTable = new google.visualization.DataTable()\r\n            dataTable.addColumn 'number', pivotData.colAttrs.join(\"-\")\r\n            dataTable.addColumn 'number', pivotData.rowAttrs.join(\"-\") \r\n            dataTable.addColumn type: \"string\", role: \"tooltip\"\r\n            dataTable.addRows dataArray\r\n            hAxisTitle = pivotData.colAttrs.join(\"-\")\r\n            vAxisTitle = pivotData.rowAttrs.join(\"-\")\r\n            title = \"\"\r\n        else\r\n            dataArray = [headers]\r\n            for colKey in colKeys\r\n                row = [colKey.join(\"-\")]\r\n                numCharsInHAxis += row[0].length\r\n                for rowKey in rowKeys\r\n                    agg = pivotData.getAggregator(rowKey, colKey)\r\n                    if agg.value()?\r\n                        val = agg.value()\r\n                        if $.isNumeric val\r\n                            if val < 1\r\n                                row.push parseFloat(val.toPrecision(3))\r\n                            else\r\n                                row.push parseFloat(val.toFixed(3))\r\n                        else\r\n                            row.push val\r\n                    else row.push null\r\n                dataArray.push row\r\n\r\n            dataTable = google.visualization.arrayToDataTable(dataArray)\r\n\r\n            title = vAxisTitle = fullAggName\r\n            hAxisTitle = pivotData.colAttrs.join(\"-\")\r\n            title += \" #{opts.localeStrings.vs} #{hAxisTitle}\" if hAxisTitle != \"\"\r\n            groupByTitle = pivotData.rowAttrs.join(\"-\")\r\n            title += \" #{opts.localeStrings.by} #{groupByTitle}\" if groupByTitle != \"\"\r\n\r\n        options = \r\n            title: title\r\n            hAxis: {title: hAxisTitle, slantedText: numCharsInHAxis > 50}\r\n            vAxis: {title: vAxisTitle}\r\n            tooltip: { textStyle: { fontName: 'Arial', fontSize: 12 } }\r\n\r\n        if chartType == \"ColumnChart\"\r\n            options.vAxis.minValue = 0\r\n\r\n        if chartType == \"ScatterChart\"\r\n            options.legend = position: \"none\"\r\n            options.chartArea = {'width': '80%', 'height': '80%'}\r\n\r\n        else if dataArray[0].length == 2 and dataArray[0][1] ==  \"\"\r\n            options.legend = position: \"none\"\r\n        \r\n        $.extend options, opts.gchart, extraOptions\r\n\r\n        result =\r\n            html: '<div google-chart chart=\\'chartData\\'>'\r\n            isDirective: true\r\n            chart:\r\n                data: dataArray\r\n                options: options\r\n                type: chartType\r\n        return result\r\n\r\n    ngchart_directive_renderers = \r\n        \"Line Chart\": makeGoogleChart(\"LineChart\")\r\n        \"Bar Chart\": makeGoogleChart(\"ColumnChart\")\r\n        \"Stacked Bar Chart\": makeGoogleChart(\"ColumnChart\", isStacked: true)\r\n        \"Area Chart\": makeGoogleChart(\"AreaChart\", isStacked: true)\r\n        \"Scatter Chart\": makeGoogleChart(\"ScatterChart\")\r\n","(function() {\n  var callWithJQuery;\n\n  callWithJQuery = function(pivotModule) {\n    if (typeof exports === \"object\" && typeof module === \"object\") {\n      return pivotModule(require(\"jquery\"));\n    } else if (typeof define === \"function\" && define.amd) {\n      return define([\"jquery\"], pivotModule);\n    } else {\n      return pivotModule(jQuery);\n    }\n  };\n\n  callWithJQuery(function($) {\n    var makeGoogleChart, ngchart_directive_renderers;\n    makeGoogleChart = function(chartType, extraOptions) {\n      return function(pivotData, opts) {\n        var agg, base, base1, colKey, colKeys, dataArray, dataTable, defaults, fullAggName, groupByTitle, h, hAxisTitle, headers, i, j, len, len1, numCharsInHAxis, options, ref, result, row, rowKey, rowKeys, title, tree2, vAxisTitle, val, x, y;\n        defaults = {\n          localeStrings: {\n            vs: \"vs\",\n            by: \"by\"\n          },\n          gchart: {}\n        };\n        opts = $.extend(true, defaults, opts);\n        if ((base = opts.gchart).width == null) {\n          base.width = window.innerWidth / 1.4;\n        }\n        if ((base1 = opts.gchart).height == null) {\n          base1.height = window.innerHeight / 1.4;\n        }\n        rowKeys = pivotData.getRowKeys();\n        if (rowKeys.length === 0) {\n          rowKeys.push([]);\n        }\n        colKeys = pivotData.getColKeys();\n        if (colKeys.length === 0) {\n          colKeys.push([]);\n        }\n        fullAggName = pivotData.aggregatorName;\n        if (pivotData.valAttrs.length) {\n          fullAggName += \"(\" + (pivotData.valAttrs.join(\", \")) + \")\";\n        }\n        headers = (function() {\n          var i, len, results;\n          results = [];\n          for (i = 0, len = rowKeys.length; i < len; i++) {\n            h = rowKeys[i];\n            results.push(h.join(\"-\"));\n          }\n          return results;\n        })();\n        headers.unshift(\"\");\n        numCharsInHAxis = 0;\n        if (chartType === \"ScatterChart\") {\n          dataArray = [];\n          ref = pivotData.tree;\n          for (y in ref) {\n            tree2 = ref[y];\n            for (x in tree2) {\n              agg = tree2[x];\n              dataArray.push([parseFloat(x), parseFloat(y), fullAggName + \": \\n\" + agg.format(agg.value())]);\n            }\n          }\n          dataTable = new google.visualization.DataTable();\n          dataTable.addColumn('number', pivotData.colAttrs.join(\"-\"));\n          dataTable.addColumn('number', pivotData.rowAttrs.join(\"-\"));\n          dataTable.addColumn({\n            type: \"string\",\n            role: \"tooltip\"\n          });\n          dataTable.addRows(dataArray);\n          hAxisTitle = pivotData.colAttrs.join(\"-\");\n          vAxisTitle = pivotData.rowAttrs.join(\"-\");\n          title = \"\";\n        } else {\n          dataArray = [headers];\n          for (i = 0, len = colKeys.length; i < len; i++) {\n            colKey = colKeys[i];\n            row = [colKey.join(\"-\")];\n            numCharsInHAxis += row[0].length;\n            for (j = 0, len1 = rowKeys.length; j < len1; j++) {\n              rowKey = rowKeys[j];\n              agg = pivotData.getAggregator(rowKey, colKey);\n              if (agg.value() != null) {\n                val = agg.value();\n                if ($.isNumeric(val)) {\n                  if (val < 1) {\n                    row.push(parseFloat(val.toPrecision(3)));\n                  } else {\n                    row.push(parseFloat(val.toFixed(3)));\n                  }\n                } else {\n                  row.push(val);\n                }\n              } else {\n                row.push(null);\n              }\n            }\n            dataArray.push(row);\n          }\n          dataTable = google.visualization.arrayToDataTable(dataArray);\n          title = vAxisTitle = fullAggName;\n          hAxisTitle = pivotData.colAttrs.join(\"-\");\n          if (hAxisTitle !== \"\") {\n            title += \" \" + opts.localeStrings.vs + \" \" + hAxisTitle;\n          }\n          groupByTitle = pivotData.rowAttrs.join(\"-\");\n          if (groupByTitle !== \"\") {\n            title += \" \" + opts.localeStrings.by + \" \" + groupByTitle;\n          }\n        }\n        options = {\n          title: title,\n          hAxis: {\n            title: hAxisTitle,\n            slantedText: numCharsInHAxis > 50\n          },\n          vAxis: {\n            title: vAxisTitle\n          },\n          tooltip: {\n            textStyle: {\n              fontName: 'Arial',\n              fontSize: 12\n            }\n          }\n        };\n        if (chartType === \"ColumnChart\") {\n          options.vAxis.minValue = 0;\n        }\n        if (chartType === \"ScatterChart\") {\n          options.legend = {\n            position: \"none\"\n          };\n          options.chartArea = {\n            'width': '80%',\n            'height': '80%'\n          };\n        } else if (dataArray[0].length === 2 && dataArray[0][1] === \"\") {\n          options.legend = {\n            position: \"none\"\n          };\n        }\n        $.extend(options, opts.gchart, extraOptions);\n        result = {\n          html: '<div google-chart chart=\\'chartData\\'>',\n          isDirective: true,\n          chart: {\n            data: dataArray,\n            options: options,\n            type: chartType\n          }\n        };\n        return result;\n      };\n    };\n    return ngchart_directive_renderers = {\n      \"Line Chart\": makeGoogleChart(\"LineChart\"),\n      \"Bar Chart\": makeGoogleChart(\"ColumnChart\"),\n      \"Stacked Bar Chart\": makeGoogleChart(\"ColumnChart\", {\n        isStacked: true\n      }),\n      \"Area Chart\": makeGoogleChart(\"AreaChart\", {\n        isStacked: true\n      }),\n      \"Scatter Chart\": makeGoogleChart(\"ScatterChart\")\n    };\n  });\n\n}).call(this);\n\n//# sourceMappingURL=ngchart_directive_renderers.js.map\n"],"sourceRoot":"/source/"}