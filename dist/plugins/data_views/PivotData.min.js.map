{"version":3,"sources":["PivotData.min.js"],"names":["callWithJQuery","factory","exports","module","require","define","amd","undefined","window","ngRNDR","plugins","dataViews","$","extend","jQuery","d3","PivotData","data","opts","this","dataUtils","filter","record","excludedItems","ref7","k","meta","attributeFilterExclusions","indexOf","call","sorters","axisValues","colAttrs","cols","rowAttrs","rows","valAttrs","vals","tree","rowKeys","colKeys","rowTotals","colTotals","sorted","aggregatorName","aggregator","name","aggregate","allTotal","self","convertToArray","availableAttributes","concat","tblCols","ref","results","hasProp","push","l","len1","length","x","shownAttributes","len2","n","c","hiddenAttributes","attributesAvailableForRowsAndCols","forEachRecord","derivedAttributes","base","v","_this","processRecord","prototype","constructor","arrSort","attrs","a","sortersArr","getSort","b","comparison","i","sorter","sortKeys","sort","getColKeys","getRowKeys","colKey","flatColKey","flatRowKey","ref1","ref2","ref3","rowKey","join","String","fromCharCode","getAggregator","agg","value","format","isExcluded","property","key","addExclusionFilter","attributeFilterName","filterByAttributeValue","index","splice","attributeFilterInclusions","angular","forEach","addInclusionFilter","oldAttributeFilterInclusions"],"mappings":"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","file":"PivotData.min.js","sourcesContent":["(function() {\r\n    var callWithJQuery;\r\n\r\n    callWithJQuery = function(factory) {\r\n        if (typeof exports === \"object\" && typeof module === \"object\") {\r\n            return factory(require(\"jquery\"));\r\n        } else if (typeof define === \"function\" && define.amd) {\r\n            return define([\"jquery\"], factory);\r\n        } else {\r\n            if (window.ngRNDR === undefined) {\r\n                window.ngRNDR = {};\r\n                if (window.ngRNDR.plugins === undefined) {\r\n                    window.ngRNDR.plugins = {};\r\n                    if (window.ngRNDR.plugins.dataViews === undefined) {\r\n                        window.ngRNDR.plugins.dataViews = {};\r\n                    }\r\n                }\r\n            }\r\n            window.ngRNDR.plugins.dataViews = $.extend({}, window.ngRNDR.plugins.dataViews, factory(jQuery, d3));\r\n            return window.ngRNDR.plugins.dataViews;\r\n        }\r\n    };\r\n\r\n    callWithJQuery(function($) {\r\n        function PivotData(data, opts) {\r\n            this.dataUtils = opts.dataUtils;\r\n            this.filter = function(record) {\r\n                var excludedItems, ref7;\r\n                for (var k in this.meta.attributeFilterExclusions) {\r\n                    excludedItems = this.meta.attributeFilterExclusions[k];\r\n                    if (ref7 = \"\" + record[k], this.dataUtils.indexOf.call(excludedItems, ref7) >= 0) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            };\r\n            this.sorters = function() {};\r\n            this.axisValues = {};\r\n\r\n            this.meta = opts.meta;\r\n            this.meta.colAttrs = opts.meta.cols;\r\n            this.meta.rowAttrs = opts.meta.rows;\r\n            this.meta.valAttrs = opts.meta.vals;\r\n            this.meta.sorters = opts.meta.sorters;\r\n            this.meta.tree = {};\r\n            this.meta.rowKeys = [];\r\n            this.meta.colKeys = [];\r\n            this.meta.rowTotals = {};\r\n            this.meta.colTotals = {};\r\n            this.meta.sorted = false;\r\n            this.meta.aggregatorName = opts.aggregator.name;\r\n            this.meta.aggregator = opts.aggregator.aggregate;\r\n            this.meta.allTotal = this.meta.aggregator(this, [], []);\r\n\r\n            var self = this;\r\n\r\n            //Prep the data\r\n            data = self.dataUtils.convertToArray(data);\r\n\r\n            self.meta.availableAttributes = self.meta.rowAttrs.concat(self.meta.colAttrs);\r\n            self.meta.tblCols = (function() {\r\n                var ref, results;\r\n                ref = data[0];\r\n                results = [];\r\n                for (var k in ref) {\r\n                    if (!self.dataUtils.hasProp.call(ref, k)) continue;\r\n                    results.push(k);\r\n                }\r\n                return results;\r\n            })();\r\n            for (var l = 0, len1 = self.meta.tblCols.length; l < len1; l++) {\r\n                var x = self.meta.tblCols[l];\r\n                self.axisValues[x] = {};\r\n            }\r\n            self.meta.shownAttributes = (function() {\r\n                var len2, n, results;\r\n                results = [];\r\n                for (var n = 0, len2 = self.meta.tblCols.length; n < len2; n++) {\r\n                    var c = self.meta.tblCols[n];\r\n                    if (self.dataUtils.indexOf.call(self.meta.hiddenAttributes, c) < 0) {\r\n                        results.push(c);\r\n                    }\r\n                }\r\n                return results;\r\n            })();\r\n            if (self.meta.attributesAvailableForRowsAndCols.length + self.meta.rows.length + self.meta.cols.length !== self.meta.shownAttributes.length) {\r\n                self.meta.attributesAvailableForRowsAndCols = self.meta.shownAttributes;\r\n            }\r\n\r\n            self.dataUtils.forEachRecord(data, self.meta.derivedAttributes, function(record) {\r\n                var base, results, v;\r\n                results = [];\r\n                for (var k in record) {\r\n                    if (!self.dataUtils.hasProp.call(record, k)) continue;\r\n                    v = record[k];\r\n                    if (v == null) {\r\n                        v = \"null\";\r\n                    }\r\n                    if ((base = self.axisValues[k])[v] == null) {\r\n                        base[v] = 0;\r\n                    }\r\n                    results.push(self.axisValues[k][v]++);\r\n                }\r\n                return results;\r\n            });\r\n            self.dataUtils.forEachRecord(data, self.meta.derivedAttributes, (function(_this) {\r\n                return function(record) {\r\n                    if (_this.filter(record)) {\r\n                        return _this.processRecord(record);\r\n                    }\r\n                };\r\n            })(self));\r\n        }\r\n        PivotData.prototype = {\r\n            constructor: PivotData,\r\n            arrSort: function(attrs) {\r\n                var a, sortersArr;\r\n                sortersArr = (function() {\r\n                    var l, len1, results;\r\n                    results = [];\r\n                    for (l = 0, len1 = attrs.length; l < len1; l++) {\r\n                        a = attrs[l];\r\n                        results.push(this.dataUtils.getSort(this.sorters, a));\r\n                    }\r\n                    return results;\r\n                }).call(this);\r\n                return function(a, b) {\r\n                    var comparison, i, sorter;\r\n                    for (i in sortersArr) {\r\n                        sorter = sortersArr[i];\r\n                        comparison = sorter(a[i], b[i]);\r\n                        if (comparison !== 0) {\r\n                            return comparison;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                };\r\n            },\r\n            sortKeys: function() {\r\n                if (!this.meta.sorted) {\r\n                    this.meta.sorted = true;\r\n                    this.meta.rowKeys.sort(this.arrSort(this.meta.rowAttrs));\r\n                    this.meta.colKeys.sort(this.arrSort(this.meta.colAttrs));\r\n                }\r\n            },\r\n            getColKeys: function() {\r\n                this.sortKeys();\r\n                return this.meta.colKeys;\r\n            },\r\n            getRowKeys: function() {\r\n                this.sortKeys();\r\n                return this.meta.rowKeys;\r\n            },\r\n            processRecord: function(record) {\r\n                var colKey, flatColKey, flatRowKey, l, len1, len2, n, ref, ref1, ref2, ref3, rowKey, x;\r\n                colKey = [];\r\n                rowKey = [];\r\n                ref = this.meta.colAttrs;\r\n                for (l = 0, len1 = ref.length; l < len1; l++) {\r\n                    x = ref[l];\r\n                    colKey.push((ref1 = record[x]) != null ? ref1 : \"null\");\r\n                }\r\n                ref2 = this.meta.rowAttrs;\r\n                for (n = 0, len2 = ref2.length; n < len2; n++) {\r\n                    x = ref2[n];\r\n                    rowKey.push((ref3 = record[x]) != null ? ref3 : \"null\");\r\n                }\r\n                flatRowKey = rowKey.join(String.fromCharCode(0));\r\n                flatColKey = colKey.join(String.fromCharCode(0));\r\n                this.meta.allTotal.push(record);\r\n                if (rowKey.length !== 0) {\r\n                    if (!this.meta.rowTotals[flatRowKey]) {\r\n                        this.meta.rowKeys.push(rowKey);\r\n                        this.meta.rowTotals[flatRowKey] = this.meta.aggregator(this, rowKey, []);\r\n                    }\r\n                    this.meta.rowTotals[flatRowKey].push(record);\r\n                }\r\n                if (colKey.length !== 0) {\r\n                    if (!this.meta.colTotals[flatColKey]) {\r\n                        this.meta.colKeys.push(colKey);\r\n                        this.meta.colTotals[flatColKey] = this.meta.aggregator(this, [], colKey);\r\n                    }\r\n                    this.meta.colTotals[flatColKey].push(record);\r\n                }\r\n                if (colKey.length !== 0 && rowKey.length !== 0) {\r\n                    if (!this.meta.tree[flatRowKey]) {\r\n                        this.meta.tree[flatRowKey] = {};\r\n                    }\r\n                    if (!this.meta.tree[flatRowKey][flatColKey]) {\r\n                        this.meta.tree[flatRowKey][flatColKey] = this.meta.aggregator(this, rowKey, colKey);\r\n                    }\r\n                    return this.meta.tree[flatRowKey][flatColKey].push(record);\r\n                }\r\n            },\r\n            getAggregator: function(rowKey, colKey) {\r\n                var agg, flatColKey, flatRowKey;\r\n                flatRowKey = rowKey.join(String.fromCharCode(0));\r\n                flatColKey = colKey.join(String.fromCharCode(0));\r\n                if (rowKey.length === 0 && colKey.length === 0) {\r\n                    agg = this.meta.allTotal;\r\n                } else if (rowKey.length === 0) {\r\n                    agg = this.meta.colTotals[flatColKey];\r\n                } else if (colKey.length === 0) {\r\n                    agg = this.meta.rowTotals[flatRowKey];\r\n                } else {\r\n                    agg = this.meta.tree[flatRowKey][flatColKey];\r\n                }\r\n                return agg != null ? agg : {\r\n                    value: (function() {\r\n                        return null;\r\n                    }),\r\n                    format: function() {\r\n                        return \"\";\r\n                    }\r\n                };\r\n            },\r\n            isExcluded: function(property, key) {\r\n                var self = this;\r\n                if (self.meta.attributeFilterExclusions[property] !== undefined) {\r\n                    if (self.meta.attributeFilterExclusions[property].indexOf(key) >= 0) {\r\n                        return false;\r\n                    } else {\r\n                        return true;\r\n                    }\r\n                }\r\n                return true;\r\n            },\r\n            addExclusionFilter: function(attributeFilterName, filterByAttributeValue) {\r\n                var self = this;\r\n                if (self.meta.attributeFilterExclusions[attributeFilterName] !== undefined) {\r\n                    var index = self.meta.attributeFilterExclusions[attributeFilterName].indexOf(filterByAttributeValue);\r\n                    if (index >= 0) {\r\n                        self.meta.attributeFilterExclusions[attributeFilterName].splice(index, 1);\r\n                    } else {\r\n                        self.meta.attributeFilterExclusions[attributeFilterName].push(filterByAttributeValue);\r\n                    }\r\n                } else {\r\n                    self.meta.attributeFilterExclusions[attributeFilterName] = [];\r\n                    self.meta.attributeFilterExclusions[attributeFilterName].push(filterByAttributeValue);\r\n                }\r\n                self.meta.attributeFilterInclusions[attributeFilterName] = [];\r\n                angular.forEach(self.axisValues[attributeFilterName], function(value, key) {\r\n                    if (self.meta.attributeFilterExclusions[attributeFilterName].indexOf(key) < 0) {\r\n                        self.meta.attributeFilterInclusions[attributeFilterName].push(key);\r\n                    }\r\n                });\r\n            },\r\n            addInclusionFilter: function(attributeFilterName, filterByAttributeValue) {\r\n                var self = this;\r\n                self.meta.attributeFilterInclusions[attributeFilterName] = [];\r\n                self.meta.attributeFilterExclusions[attributeFilterName] = [];\r\n                self.addExclusionFilter(attributeFilterName, filterByAttributeValue);\r\n                var oldAttributeFilterInclusions = self.meta.attributeFilterInclusions[attributeFilterName];\r\n                self.meta.attributeFilterInclusions[attributeFilterName] = self.meta.attributeFilterExclusions[attributeFilterName];\r\n                self.meta.attributeFilterExclusions[attributeFilterName] = oldAttributeFilterInclusions;\r\n            }\r\n        };\r\n        return PivotData;\r\n    });\r\n\r\n}).call(this);\r\n\r\n//# sourceMappingURL=PivotData.js.map\r\n\r\n//# sourceMappingURL=PivotData.js.map\r\n"]}