{"version":3,"sources":["gchart_renderers.min.js"],"names":["callWithJQuery","pivotModule","exports","module","require","define","amd","jQuery","$","gchart_renderers","makeGoogleChart","chartType","extraOptions","pivotData","opts","agg","base","base1","colKey","colKeys","dataArray","dataTable","defaults","fullAggName","groupByTitle","h","hAxisTitle","headers","i","j","len","len1","numCharsInHAxis","options","ref","result","returnObject","row","rowKey","rowKeys","title","tree2","vAxisTitle","val","wrapper","x","y","localeStrings","vs","by","gchart","extend","width","window","innerWidth","height","innerHeight","getRowKeys","length","push","getColKeys","aggregatorName","valAttrs","join","results","unshift","tree","parseFloat","format","value","google","visualization","DataTable","addColumn","colAttrs","rowAttrs","type","role","addRows","getAggregator","isNumeric","toPrecision","toFixed","arrayToDataTable","hAxis","slantedText","vAxis","tooltip","textStyle","fontName","fontSize","chartArea","minValue","legend","position","css","ChartWrapper","draw","bind","editor","ChartEditor","events","addListener","getChartWrapper","openDialog","html","Line Chart","Bar Chart","Stacked Bar Chart","isStacked","Area Chart","Scatter Chart","call","this"],"mappings":"CAAA,WACE,GAAIA,IAEJA,EAAiB,SAASC,GACxB,MAAuB,gBAAZC,UAA0C,gBAAXC,QACjCF,EAAYG,QAAQ,WACA,kBAAXC,SAAyBA,OAAOC,IACzCD,QAAQ,UAAWJ,GAEnBA,EAAYM,UAIR,SAASC,GACtB,GAAIC,GAAkBC,CA2JtB,OA1JAA,GAAkB,SAASC,EAAWC,GACpC,MAAO,UAASC,EAAWC,GACzB,GAAIC,GAAKC,EAAMC,EAAOC,EAAQC,EAASC,EAAWC,EAAWC,EAAUC,EAAaC,EAAcC,EAAGC,EAAYC,EAASC,EAAGC,EAAGC,EAAKC,EAAMC,EAAiBC,EAASC,EAAKC,EAAQC,EAAcC,EAAKC,EAAQC,EAASC,EAAOC,EAAOC,EAAYC,EAAKC,EAASC,EAAGC,CAsCjQ,IArCAxB,GACEyB,eACEC,GAAI,KACJC,GAAI,MAENC,WAEFpC,EAAON,EAAE2C,QAAO,EAAM7B,EAAUR,GACE,OAA7BE,EAAOF,EAAKoC,QAAQE,QACvBpC,EAAKoC,MAAQC,OAAOC,WAAa,KAEC,OAA/BrC,EAAQH,EAAKoC,QAAQK,SACxBtC,EAAMsC,OAASF,OAAOG,YAAc,KAEtCjB,EAAU1B,EAAU4C,aACG,IAAnBlB,EAAQmB,QACVnB,EAAQoB,SAEVxC,EAAUN,EAAU+C,aACG,IAAnBzC,EAAQuC,QACVvC,EAAQwC,SAEVpC,EAAcV,EAAUgD,eACpBhD,EAAUiD,SAASJ,SACrBnC,GAAe,IAAOV,EAAUiD,SAASC,KAAK,MAAS,KAEzDpC,EAAU,WACR,GAAIC,GAAGE,EAAKkC,CAEZ,KADAA,KACKpC,EAAI,EAAGE,EAAMS,EAAQmB,OAAQ9B,EAAIE,EAAKF,IACzCH,EAAIc,EAAQX,GACZoC,EAAQL,KAAKlC,EAAEsC,KAAK,KAEtB,OAAOC,MAETrC,EAAQsC,QAAQ,IAChBjC,EAAkB,EACA,iBAAdrB,EAA8B,CAChCS,KACAc,EAAMrB,EAAUqD,IAChB,KAAKpB,IAAKZ,GAAK,CACbO,EAAQP,EAAIY,EACZ,KAAKD,IAAKJ,GACR1B,EAAM0B,EAAMI,GACZzB,EAAUuC,MAAMQ,WAAWtB,GAAIsB,WAAWrB,GAAIvB,EAAc,OAASR,EAAIqD,OAAOrD,EAAIsD,WAGxFhD,EAAY,GAAIiD,QAAOC,cAAcC,UACrCnD,EAAUoD,UAAU,SAAU5D,EAAU6D,SAASX,KAAK,MACtD1C,EAAUoD,UAAU,SAAU5D,EAAU8D,SAASZ,KAAK,MACtD1C,EAAUoD,WACRG,KAAM,SACNC,KAAM,YAERxD,EAAUyD,QAAQ1D,GAClBM,EAAab,EAAU6D,SAASX,KAAK,KACrCrB,EAAa7B,EAAU8D,SAASZ,KAAK,KACrCvB,EAAQ,OACH,CAEL,IADApB,GAAaO,GACRC,EAAI,EAAGE,EAAMX,EAAQuC,OAAQ9B,EAAIE,EAAKF,IAAK,CAI9C,IAHAV,EAASC,EAAQS,GACjBS,GAAOnB,EAAO6C,KAAK,MACnB/B,GAAmBK,EAAI,GAAGqB,OACrB7B,EAAI,EAAGE,EAAOQ,EAAQmB,OAAQ7B,EAAIE,EAAMF,IAC3CS,EAASC,EAAQV,GACjBd,EAAMF,EAAUkE,cAAczC,EAAQpB,GACnB,MAAfH,EAAIsD,SACN1B,EAAM5B,EAAIsD,QACN7D,EAAEwE,UAAUrC,GACVA,EAAM,EACRN,EAAIsB,KAAKQ,WAAWxB,EAAIsC,YAAY,KAEpC5C,EAAIsB,KAAKQ,WAAWxB,EAAIuC,QAAQ,KAGlC7C,EAAIsB,KAAKhB,IAGXN,EAAIsB,KAAK,KAGbvC,GAAUuC,KAAKtB,GAEjBhB,EAAYiD,OAAOC,cAAcY,iBAAiB/D,GAClDoB,EAAQE,EAAanB,EACrBG,EAAab,EAAU6D,SAASX,KAAK,KAClB,KAAfrC,IACFc,GAAS,IAAM1B,EAAKiC,cAAcC,GAAK,IAAMtB,GAE/CF,EAAeX,EAAU8D,SAASZ,KAAK,KAClB,KAAjBvC,IACFgB,GAAS,IAAM1B,EAAKiC,cAAcE,GAAK,IAAMzB,GAsDjD,MAnDAS,IACEO,MAAOA,EACP4C,OACE5C,MAAOd,EACP2D,YAAarD,EAAkB,IAEjCsD,OACE9C,MAAOE,GAET6C,SACEC,WACEC,SAAU,QACVC,SAAU,KAGdC,WACEvC,MAAS,MACTG,OAAU,QAGI,gBAAd5C,IACFsB,EAAQqD,MAAMM,SAAW,GAET,iBAAdjF,EACFsB,EAAQ4D,QACNC,SAAU,QAEqB,IAAxB1E,EAAU,GAAGsC,QAAoC,KAApBtC,EAAU,GAAG,KACnDa,EAAQ4D,QACNC,SAAU,SAGdtF,EAAE2C,OAAOlB,EAASnB,EAAKoC,OAAQtC,GAC/BuB,EAAS3B,EAAE,SAASuF,KAClB3C,MAAOtC,EAAKoC,OAAOE,MACnBG,OAAQzC,EAAKoC,OAAOK,SAEtBX,EAAU,GAAI0B,QAAOC,cAAcyB,cACjC3E,UAAWA,EACXV,UAAWA,EACXsB,QAASA,IAEXW,EAAQqD,KAAK9D,EAAO,IACpBA,EAAO+D,KAAK,WAAY,WACtB,GAAIC,EAKJ,OAJAA,GAAS,GAAI7B,QAAOC,cAAc6B,YAClC9B,OAAOC,cAAc8B,OAAOC,YAAYH,EAAQ,KAAM,WACpD,MAAOA,GAAOI,kBAAkBN,KAAK9D,EAAO,MAEvCgE,EAAOK,WAAW5D,KAEpBR,GACLqE,KAAMtE,KAIL1B,GACLiG,aAAchG,EAAgB,aAC9BiG,YAAajG,EAAgB,eAC7BkG,oBAAqBlG,EAAgB,eACnCmG,WAAW,IAEbC,aAAcpG,EAAgB,aAC5BmG,WAAW,IAEbE,gBAAiBrG,EAAgB,qBAIpCsG,KAAKC","file":"gchart_renderers.min.js","sourcesContent":["(function() {\n  var callWithJQuery;\n\n  callWithJQuery = function(pivotModule) {\n    if (typeof exports === \"object\" && typeof module === \"object\") {\n      return pivotModule(require(\"jquery\"));\n    } else if (typeof define === \"function\" && define.amd) {\n      return define([\"jquery\"], pivotModule);\n    } else {\n      return pivotModule(jQuery);\n    }\n  };\n\n  callWithJQuery(function($) {\n    var gchart_renderers, makeGoogleChart;\n    makeGoogleChart = function(chartType, extraOptions) {\n      return function(pivotData, opts) {\n        var agg, base, base1, colKey, colKeys, dataArray, dataTable, defaults, fullAggName, groupByTitle, h, hAxisTitle, headers, i, j, len, len1, numCharsInHAxis, options, ref, result, returnObject, row, rowKey, rowKeys, title, tree2, vAxisTitle, val, wrapper, x, y;\n        defaults = {\n          localeStrings: {\n            vs: \"vs\",\n            by: \"by\"\n          },\n          gchart: {}\n        };\n        opts = $.extend(true, defaults, opts);\n        if ((base = opts.gchart).width == null) {\n          base.width = window.innerWidth / 1.4;\n        }\n        if ((base1 = opts.gchart).height == null) {\n          base1.height = window.innerHeight / 1.4;\n        }\n        rowKeys = pivotData.getRowKeys();\n        if (rowKeys.length === 0) {\n          rowKeys.push([]);\n        }\n        colKeys = pivotData.getColKeys();\n        if (colKeys.length === 0) {\n          colKeys.push([]);\n        }\n        fullAggName = pivotData.aggregatorName;\n        if (pivotData.valAttrs.length) {\n          fullAggName += \"(\" + (pivotData.valAttrs.join(\", \")) + \")\";\n        }\n        headers = (function() {\n          var i, len, results;\n          results = [];\n          for (i = 0, len = rowKeys.length; i < len; i++) {\n            h = rowKeys[i];\n            results.push(h.join(\"-\"));\n          }\n          return results;\n        })();\n        headers.unshift(\"\");\n        numCharsInHAxis = 0;\n        if (chartType === \"ScatterChart\") {\n          dataArray = [];\n          ref = pivotData.tree;\n          for (y in ref) {\n            tree2 = ref[y];\n            for (x in tree2) {\n              agg = tree2[x];\n              dataArray.push([parseFloat(x), parseFloat(y), fullAggName + \": \\n\" + agg.format(agg.value())]);\n            }\n          }\n          dataTable = new google.visualization.DataTable();\n          dataTable.addColumn('number', pivotData.colAttrs.join(\"-\"));\n          dataTable.addColumn('number', pivotData.rowAttrs.join(\"-\"));\n          dataTable.addColumn({\n            type: \"string\",\n            role: \"tooltip\"\n          });\n          dataTable.addRows(dataArray);\n          hAxisTitle = pivotData.colAttrs.join(\"-\");\n          vAxisTitle = pivotData.rowAttrs.join(\"-\");\n          title = \"\";\n        } else {\n          dataArray = [headers];\n          for (i = 0, len = colKeys.length; i < len; i++) {\n            colKey = colKeys[i];\n            row = [colKey.join(\"-\")];\n            numCharsInHAxis += row[0].length;\n            for (j = 0, len1 = rowKeys.length; j < len1; j++) {\n              rowKey = rowKeys[j];\n              agg = pivotData.getAggregator(rowKey, colKey);\n              if (agg.value() != null) {\n                val = agg.value();\n                if ($.isNumeric(val)) {\n                  if (val < 1) {\n                    row.push(parseFloat(val.toPrecision(3)));\n                  } else {\n                    row.push(parseFloat(val.toFixed(3)));\n                  }\n                } else {\n                  row.push(val);\n                }\n              } else {\n                row.push(null);\n              }\n            }\n            dataArray.push(row);\n          }\n          dataTable = google.visualization.arrayToDataTable(dataArray);\n          title = vAxisTitle = fullAggName;\n          hAxisTitle = pivotData.colAttrs.join(\"-\");\n          if (hAxisTitle !== \"\") {\n            title += \" \" + opts.localeStrings.vs + \" \" + hAxisTitle;\n          }\n          groupByTitle = pivotData.rowAttrs.join(\"-\");\n          if (groupByTitle !== \"\") {\n            title += \" \" + opts.localeStrings.by + \" \" + groupByTitle;\n          }\n        }\n        options = {\n          title: title,\n          hAxis: {\n            title: hAxisTitle,\n            slantedText: numCharsInHAxis > 50\n          },\n          vAxis: {\n            title: vAxisTitle\n          },\n          tooltip: {\n            textStyle: {\n              fontName: 'Arial',\n              fontSize: 12\n            }\n          },\n          chartArea: {\n            'width': '80%',\n            'height': '80%'\n          }\n        };\n        if (chartType === \"ColumnChart\") {\n          options.vAxis.minValue = 0;\n        }\n        if (chartType === \"ScatterChart\") {\n          options.legend = {\n            position: \"none\"\n          };\n        } else if (dataArray[0].length === 2 && dataArray[0][1] === \"\") {\n          options.legend = {\n            position: \"none\"\n          };\n        }\n        $.extend(options, opts.gchart, extraOptions);\n        result = $(\"<div>\").css({\n          width: opts.gchart.width,\n          height: opts.gchart.height\n        });\n        wrapper = new google.visualization.ChartWrapper({\n          dataTable: dataTable,\n          chartType: chartType,\n          options: options\n        });\n        wrapper.draw(result[0]);\n        result.bind(\"dblclick\", function() {\n          var editor;\n          editor = new google.visualization.ChartEditor();\n          google.visualization.events.addListener(editor, 'ok', function() {\n            return editor.getChartWrapper().draw(result[0]);\n          });\n          return editor.openDialog(wrapper);\n        });\n        return returnObject = {\n          html: result\n        };\n      };\n    };\n    return gchart_renderers = {\n      \"Line Chart\": makeGoogleChart(\"LineChart\"),\n      \"Bar Chart\": makeGoogleChart(\"ColumnChart\"),\n      \"Stacked Bar Chart\": makeGoogleChart(\"ColumnChart\", {\n        isStacked: true\n      }),\n      \"Area Chart\": makeGoogleChart(\"AreaChart\", {\n        isStacked: true\n      }),\n      \"Scatter Chart\": makeGoogleChart(\"ScatterChart\")\n    };\n  });\n\n}).call(this);\n\n//# sourceMappingURL=gchart_renderers.js.map\n\n//# sourceMappingURL=gchart_renderers.js.map\n"],"sourceRoot":"/source/"}