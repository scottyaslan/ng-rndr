{"version":3,"sources":["c3_renderers.min.js"],"names":["callWithJQuery","factory","exports","module","require","define","amd","undefined","window","ngRNDR","plugins","renderers","$","extend","jQuery","c3","c3_renderers","makeC3Chart","chartOpts","pivotData","opts","agg","base","base1","base2","colKey","colKeys","columns","dataArray","datum","defaults","fullAggName","groupByTitle","h","hAxisTitle","headers","i","j","k","len","len1","len2","numCharsInHAxis","params","ref","renderArea","result","returnObject","rotationAngle","row","rowHeader","rowKey","rowKeys","title","titleText","tree2","vAxisTitle","val","x","y","localeStrings","vs","by","size","height","heightOffset","width","widthOffset","innerWidth","innerHeight","type","getRowKeys","length","push","getColKeys","results","join","meta","aggregatorName","valAttrs","colAttrs","rowAttrs","tree","parseFloat","format","value","getAggregator","isFinite","toPrecision","toFixed","style","text","axis","label","tick","rotate","multiline","data","tooltip","grouped","color","pattern","fit","json","keys","legend","show","name","a","b","c","d","categories","stacked","groups","l","len3","appendTo","bindto","generate","detach","remove","append","html","C3 - Line Chart","C3 - Bar Chart","C3 - Stacked Bar Chart","C3 - Area Chart","C3 - Scatter Chart","call","this"],"mappings":"CAAA,WACI,GAAIA,IAEJA,EAAiB,SAASC,GACtB,MAAuB,gBAAZC,UAA0C,gBAAXC,QAC/BF,EAAQG,QAAQ,UAAWA,QAAQ,OACjB,kBAAXC,SAAyBA,OAAOC,IACvCD,QAAQ,SAAU,MAAOJ,IAEVM,SAAlBC,OAAOC,SACPD,OAAOC,UACuBF,SAA1BC,OAAOC,OAAOC,UACdF,OAAOC,OAAOC,WAC0BH,SAApCC,OAAOC,OAAOC,QAAQC,YACtBH,OAAOC,OAAOC,QAAQC,gBAIlCH,OAAOC,OAAOC,QAAQC,UAAYC,EAAEC,UAAWL,OAAOC,OAAOC,QAAQC,UAAWV,EAAQa,OAAQC,KACzFP,OAAOC,OAAOC,QAAQC,aAItB,SAASC,EAAGG,GACvB,GAAIC,GAAcC,CAgMlB,OA/LAA,GAAc,SAASC,GAInB,MAHiB,OAAbA,IACAA,MAEG,SAASC,EAAWC,GACvB,GAAIC,GAAKC,EAAMC,EAAOC,EAAOC,EAAQC,EAASC,EAASC,EAAWC,EAAOC,EAAUC,EAAaC,EAAcC,EAAGC,EAAYC,EAASC,EAAGC,EAAGC,EAAGC,EAAKC,EAAMC,EAAMC,EAAiBC,EAAQC,EAAKC,EAAYC,EAAQC,EAAcC,EAAeC,EAAKC,EAAWC,EAAQC,EAASC,EAAOC,EAAWC,EAAOC,EAAYC,EAAKC,EAAGC,CA+C7T,IA9CA7B,GACI8B,eACIC,GAAI,KACJC,GAAI,MAER/C,IACIgD,UAGR3C,EAAOR,EAAEC,QAAO,EAAMiB,EAAUV,GAChCA,EAAKL,GAAGgD,KAAKC,OAAS5C,EAAK4C,OAAS5C,EAAK6C,aACzC7C,EAAKL,GAAGgD,KAAKG,MAAQ9C,EAAK8C,MAAQ9C,EAAK+C,YACV,OAAxB7C,EAAOF,EAAKL,IAAIgD,OACjBzC,EAAKyC,SAE2B,OAA/BxC,EAAQH,EAAKL,GAAGgD,MAAMG,QACvB3C,EAAM2C,MAAQ1D,OAAO4D,WAAa,KAED,OAAhC5C,EAAQJ,EAAKL,GAAGgD,MAAMC,SACvBxC,EAAMwC,OAASxD,OAAO6D,YAAc,IAAM,IAExB,MAAlBnD,EAAUoD,OACVpD,EAAUoD,KAAO,QAErBlB,EAAUjC,EAAUoD,aACG,IAAnBnB,EAAQoB,QACRpB,EAAQqB,SAEZ/C,EAAUP,EAAUuD,aACG,IAAnBhD,EAAQ8C,QACR9C,EAAQ+C,SAEZtC,EAAU,WACN,GAAIC,GAAGG,EAAKoC,CAEZ,KADAA,KACKvC,EAAI,EAAGG,EAAMb,EAAQ8C,OAAQpC,EAAIG,EAAKH,IACvCH,EAAIP,EAAQU,GACZuC,EAAQF,KAAKxC,EAAE2C,KAAK,KAExB,OAAOD,MAEX3B,EAAgB,EAChBjB,EAAcZ,EAAU0D,KAAKC,eACzB3D,EAAU0D,KAAKE,SAASP,SACxBzC,GAAe,IAAOZ,EAAU0D,KAAKE,SAASH,KAAK,MAAS,KAEzC,YAAnB1D,EAAUoD,KAAoB,CAC9B1C,KACAM,EAAaf,EAAU0D,KAAKG,SAASJ,KAAK,KAC1CpB,EAAarC,EAAU0D,KAAKI,SAASL,KAAK,KAC1ChC,EAAMzB,EAAU0D,KAAKK,IACrB,KAAKvB,IAAKf,GAAK,CACXW,EAAQX,EAAIe,EACZ,KAAKD,IAAKH,GACNlC,EAAMkC,EAAMG,GACZ7B,KACAA,EAAMK,GAAciD,WAAWzB,GAC/B7B,EAAM2B,GAAc2B,WAAWxB,GAC/B9B,EAAe,QAAIR,EAAI+D,OAAO/D,EAAIgE,SAClCzD,EAAU6C,KAAK5C,QAGpB,CAEH,IADAa,EAAkB,EACbN,EAAI,EAAGG,EAAMJ,EAAQqC,OAAQpC,EAAIG,EAAKH,IACvCsB,EAAIvB,EAAQC,GACZM,GAAmBgB,EAAEc,MAMzB,KAJI9B,EAAkB,KAClBM,EAAgB,IAEpBrB,KACKU,EAAI,EAAGG,EAAOY,EAAQoB,OAAQnC,EAAIG,EAAMH,IAAK,CAI9C,IAHAc,EAASC,EAAQf,GACjBa,EAAYC,EAAOyB,KAAK,KACxB3B,GAAqB,KAAdC,EAAmB/B,EAAU0D,KAAKC,eAAiB5B,GACrDZ,EAAI,EAAGG,EAAOf,EAAQ8C,OAAQlC,EAAIG,EAAMH,IACzCb,EAASC,EAAQY,GACjBmB,EAAM0B,WAAWhE,EAAUmE,cAAcnC,EAAQ1B,GAAQ4D,SACrDE,SAAS9B,GACLA,EAAM,EACNR,EAAIwB,KAAKhB,EAAI+B,YAAY,IAEzBvC,EAAIwB,KAAKhB,EAAIgC,QAAQ,IAGzBxC,EAAIwB,KAAK,KAGjB9C,GAAQ8C,KAAKxB,GAEjBO,EAAarC,EAAU0D,KAAKC,gBAAkB3D,EAAU0D,KAAKE,SAASP,OAAS,IAAOrD,EAAU0D,KAAKE,SAASH,KAAK,MAAS,IAAM,IAClI1C,EAAaf,EAAU0D,KAAKG,SAASJ,KAAK,KAwF9C,MAtFAtB,GAAYvB,EACO,KAAfG,IACAoB,GAAa,IAAMlC,EAAKwC,cAAcC,GAAK,IAAM3B,GAErDF,EAAeb,EAAU0D,KAAKI,SAASL,KAAK,KACvB,KAAjB5C,IACAsB,GAAa,IAAMlC,EAAKwC,cAAcE,GAAK,IAAM9B,GAErDqB,EAAQzC,EAAE,OACN8E,MAAO,0CAEXrC,EAAMsC,KAAKrC,GACXX,GACIiD,MACIjC,GACIkC,MAAOrC,GAEXE,GACImC,MAAO3D,EACP4D,MACIC,OAAQ/C,EACRgD,WAAW,KAIvBC,MACI3B,KAAMpD,EAAUoD,MAEpB4B,SACIC,SAAS,GAEbC,OACIC,SAAU,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,aAGnOzF,EAAEC,OAAO8B,EAAQvB,EAAKL,IACC,YAAnBG,EAAUoD,MACV3B,EAAOsD,KAAKvC,EAAIxB,EAChBS,EAAOiD,KAAKlC,EAAEoC,MACVQ,KAAK,GAET3D,EAAOsD,KAAKM,KAAO3E,EACnBe,EAAOsD,KAAKO,MACRnB,OAAQnD,EAAYsB,IAExBb,EAAO8D,QACHC,MAAM,GAEV/D,EAAOuD,QAAQd,QACX/B,MAAO,WACH,MAAOtB,IAEX4E,KAAM,WACF,MAAO,IAEXtB,MAAO,SAASuB,EAAGC,EAAGC,EAAGC,GACrB,MAAOnF,GAAUmF,GAAGb,YAI5BvD,EAAOiD,KAAKlC,EAAEY,KAAO,WACrB3B,EAAOiD,KAAKlC,EAAEsD,WAAa7E,EAC3BQ,EAAOsD,KAAKtE,QAAUA,GAED,MAArBT,EAAU+F,UACVtE,EAAOsD,KAAKiB,QACR,WACI,GAAIC,GAAGC,EAAMzC,CAEb,KADAA,KACKwC,EAAI,EAAGC,EAAOhE,EAAQoB,OAAQ2C,EAAIC,EAAMD,IACzCzD,EAAIN,EAAQ+D,GACZxC,EAAQF,KAAKf,EAAEkB,KAAK,KAExB,OAAOD,QAInB9B,EAAajC,EAAE,SACX8E,MAAO,kBACR2B,SAASzG,EAAE,SACdkC,EAASlC,EAAE,SAASyG,SAASxE,GAC7BF,EAAO2E,OAASxE,EAAO,GACvB/B,EAAGwG,SAAS5E,GACZG,EAAO0E,SACP3E,EAAW4E,SACX7G,EAAE,SAAS8G,OAAOrE,EAAOP,GAClBC,GACH4E,KAAM7E,KAIX9B,GACH4G,kBAAmB3G,IACnB4G,iBAAkB5G,GACdqD,KAAM,QAEVwD,yBAA0B7G,GACtBqD,KAAM,MACN2C,SAAS,IAEbc,kBAAmB9G,GACfqD,KAAM,OACN2C,SAAS,IAEbe,qBAAsB/G,GAClBqD,KAAM,iBAKnB2D,KAAKC","file":"c3_renderers.min.js","sourcesContent":["(function() {\n    var callWithJQuery;\n\n    callWithJQuery = function(factory) {\n        if (typeof exports === \"object\" && typeof module === \"object\") {\n            return factory(require(\"jquery\"), require(\"c3\"));\n        } else if (typeof define === \"function\" && define.amd) {\n            return define([\"jquery\", \"c3\"], factory);\n        } else {\n            if (window.ngRNDR === undefined) {\n                window.ngRNDR = {};\n                if (window.ngRNDR.plugins === undefined) {\n                    window.ngRNDR.plugins = {};\n                    if (window.ngRNDR.plugins.renderers === undefined) {\n                        window.ngRNDR.plugins.renderers = {};\n                    }\n                }\n            }\n            window.ngRNDR.plugins.renderers = $.extend({}, window.ngRNDR.plugins.renderers, factory(jQuery, c3));\n            return window.ngRNDR.plugins.renderers;\n        }\n    };\n\n    callWithJQuery(function($, c3) {\n        var c3_renderers, makeC3Chart;\n        makeC3Chart = function(chartOpts) {\n            if (chartOpts == null) {\n                chartOpts = {};\n            }\n            return function(pivotData, opts) {\n                var agg, base, base1, base2, colKey, colKeys, columns, dataArray, datum, defaults, fullAggName, groupByTitle, h, hAxisTitle, headers, i, j, k, len, len1, len2, numCharsInHAxis, params, ref, renderArea, result, returnObject, rotationAngle, row, rowHeader, rowKey, rowKeys, title, titleText, tree2, vAxisTitle, val, x, y;\n                defaults = {\n                    localeStrings: {\n                        vs: \"vs\",\n                        by: \"by\"\n                    },\n                    c3: {\n                        size: {}\n                    }\n                };\n                opts = $.extend(true, defaults, opts);\n                opts.c3.size.height = opts.height + opts.heightOffset;\n                opts.c3.size.width = opts.width + opts.widthOffset;\n                if ((base = opts.c3).size == null) {\n                    base.size = {};\n                }\n                if ((base1 = opts.c3.size).width == null) {\n                    base1.width = window.innerWidth / 1.4;\n                }\n                if ((base2 = opts.c3.size).height == null) {\n                    base2.height = window.innerHeight / 1.4 - 50;\n                }\n                if (chartOpts.type == null) {\n                    chartOpts.type = \"line\";\n                }\n                rowKeys = pivotData.getRowKeys();\n                if (rowKeys.length === 0) {\n                    rowKeys.push([]);\n                }\n                colKeys = pivotData.getColKeys();\n                if (colKeys.length === 0) {\n                    colKeys.push([]);\n                }\n                headers = (function() {\n                    var i, len, results;\n                    results = [];\n                    for (i = 0, len = colKeys.length; i < len; i++) {\n                        h = colKeys[i];\n                        results.push(h.join(\"-\"));\n                    }\n                    return results;\n                })();\n                rotationAngle = 0;\n                fullAggName = pivotData.meta.aggregatorName;\n                if (pivotData.meta.valAttrs.length) {\n                    fullAggName += \"(\" + (pivotData.meta.valAttrs.join(\", \")) + \")\";\n                }\n                if (chartOpts.type === \"scatter\") {\n                    dataArray = [];\n                    hAxisTitle = pivotData.meta.colAttrs.join(\"-\");\n                    vAxisTitle = pivotData.meta.rowAttrs.join(\"-\");\n                    ref = pivotData.meta.tree;\n                    for (y in ref) {\n                        tree2 = ref[y];\n                        for (x in tree2) {\n                            agg = tree2[x];\n                            datum = {};\n                            datum[hAxisTitle] = parseFloat(x);\n                            datum[vAxisTitle] = parseFloat(y);\n                            datum[\"tooltip\"] = agg.format(agg.value());\n                            dataArray.push(datum);\n                        }\n                    }\n                } else {\n                    numCharsInHAxis = 0;\n                    for (i = 0, len = headers.length; i < len; i++) {\n                        x = headers[i];\n                        numCharsInHAxis += x.length;\n                    }\n                    if (numCharsInHAxis > 50) {\n                        rotationAngle = 45;\n                    }\n                    columns = [];\n                    for (j = 0, len1 = rowKeys.length; j < len1; j++) {\n                        rowKey = rowKeys[j];\n                        rowHeader = rowKey.join(\"-\");\n                        row = [rowHeader === \"\" ? pivotData.meta.aggregatorName : rowHeader];\n                        for (k = 0, len2 = colKeys.length; k < len2; k++) {\n                            colKey = colKeys[k];\n                            val = parseFloat(pivotData.getAggregator(rowKey, colKey).value());\n                            if (isFinite(val)) {\n                                if (val < 1) {\n                                    row.push(val.toPrecision(3));\n                                } else {\n                                    row.push(val.toFixed(3));\n                                }\n                            } else {\n                                row.push(null);\n                            }\n                        }\n                        columns.push(row);\n                    }\n                    vAxisTitle = pivotData.meta.aggregatorName + (pivotData.meta.valAttrs.length ? \"(\" + (pivotData.meta.valAttrs.join(\", \")) + \")\" : \"\");\n                    hAxisTitle = pivotData.meta.colAttrs.join(\"-\");\n                }\n                titleText = fullAggName;\n                if (hAxisTitle !== \"\") {\n                    titleText += \" \" + opts.localeStrings.vs + \" \" + hAxisTitle;\n                }\n                groupByTitle = pivotData.meta.rowAttrs.join(\"-\");\n                if (groupByTitle !== \"\") {\n                    titleText += \" \" + opts.localeStrings.by + \" \" + groupByTitle;\n                }\n                title = $(\"<p>\", {\n                    style: \"text-align: center; font-weight: bold\"\n                });\n                title.text(titleText);\n                params = {\n                    axis: {\n                        y: {\n                            label: vAxisTitle\n                        },\n                        x: {\n                            label: hAxisTitle,\n                            tick: {\n                                rotate: rotationAngle,\n                                multiline: false\n                            }\n                        }\n                    },\n                    data: {\n                        type: chartOpts.type\n                    },\n                    tooltip: {\n                        grouped: false\n                    },\n                    color: {\n                        pattern: [\"#3366cc\", \"#dc3912\", \"#ff9900\", \"#109618\", \"#990099\", \"#0099c6\", \"#dd4477\", \"#66aa00\", \"#b82e2e\", \"#316395\", \"#994499\", \"#22aa99\", \"#aaaa11\", \"#6633cc\", \"#e67300\", \"#8b0707\", \"#651067\", \"#329262\", \"#5574a6\", \"#3b3eac\"]\n                    }\n                };\n                $.extend(params, opts.c3);\n                if (chartOpts.type === \"scatter\") {\n                    params.data.x = hAxisTitle;\n                    params.axis.x.tick = {\n                        fit: false\n                    };\n                    params.data.json = dataArray;\n                    params.data.keys = {\n                        value: [hAxisTitle, vAxisTitle]\n                    };\n                    params.legend = {\n                        show: false\n                    };\n                    params.tooltip.format = {\n                        title: function() {\n                            return fullAggName;\n                        },\n                        name: function() {\n                            return \"\";\n                        },\n                        value: function(a, b, c, d) {\n                            return dataArray[d].tooltip;\n                        }\n                    };\n                } else {\n                    params.axis.x.type = 'category';\n                    params.axis.x.categories = headers;\n                    params.data.columns = columns;\n                }\n                if (chartOpts.stacked != null) {\n                    params.data.groups = [\n                        (function() {\n                            var l, len3, results;\n                            results = [];\n                            for (l = 0, len3 = rowKeys.length; l < len3; l++) {\n                                x = rowKeys[l];\n                                results.push(x.join(\"-\"));\n                            }\n                            return results;\n                        })()\n                    ];\n                }\n                renderArea = $(\"<div>\", {\n                    style: \"display:none;\"\n                }).appendTo($(\"body\"));\n                result = $(\"<div>\").appendTo(renderArea);\n                params.bindto = result[0];\n                c3.generate(params);\n                result.detach();\n                renderArea.remove();\n                $(\"<div>\").append(title, result);\n                return returnObject = {\n                    html: result\n                };\n            };\n        };\n        return c3_renderers = {\n            \"C3 - Line Chart\": makeC3Chart(),\n            \"C3 - Bar Chart\": makeC3Chart({\n                type: \"bar\"\n            }),\n            \"C3 - Stacked Bar Chart\": makeC3Chart({\n                type: \"bar\",\n                stacked: true\n            }),\n            \"C3 - Area Chart\": makeC3Chart({\n                type: \"area\",\n                stacked: true\n            }),\n            \"C3 - Scatter Chart\": makeC3Chart({\n                type: \"scatter\"\n            })\n        };\n    });\n\n}).call(this);\n\n//# sourceMappingURL=c3_renderers.js.map\n\n//# sourceMappingURL=c3_renderers.js.map\n"]}