{"version":3,"sources":["gchart_renderers.min.js"],"names":["callWithJQuery","factory","exports","module","require","define","amd","undefined","window","ngRNDR","plugins","renderers","$","extend","jQuery","gchart_renderers","makeGoogleChart","chartType","extraOptions","pivotData","opts","agg","base","base1","colKey","colKeys","dataArray","dataTable","defaults","fullAggName","groupByTitle","h","hAxisTitle","headers","i","j","len","len1","numCharsInHAxis","options","ref","result","returnObject","row","rowKey","rowKeys","title","tree2","vAxisTitle","val","wrapper","x","y","localeStrings","vs","by","gchart","height","heightOffset","width","widthOffset","innerWidth","innerHeight","getRowKeys","length","push","getColKeys","meta","aggregatorName","valAttrs","join","results","unshift","tree","parseFloat","format","value","google","visualization","DataTable","addColumn","colAttrs","rowAttrs","type","role","addRows","getAggregator","isNumeric","toPrecision","toFixed","arrayToDataTable","hAxis","slantedText","vAxis","tooltip","textStyle","fontName","fontSize","chartArea","minValue","legend","position","css","ChartWrapper","draw","bind","editor","ChartEditor","events","addListener","getChartWrapper","openDialog","html","Line Chart","Bar Chart","Stacked Bar Chart","isStacked","Area Chart","Scatter Chart","call","this"],"mappings":"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","file":"gchart_renderers.min.js","sourcesContent":["(function() {\n    var callWithJQuery;\n\n    callWithJQuery = function(factory) {\n        if (typeof exports === \"object\" && typeof module === \"object\") {\n            return factory(require(\"jquery\"));\n        } else if (typeof define === \"function\" && define.amd) {\n            return define([\"jquery\"], factory);\n        } else {\n            if (window.ngRNDR === undefined) {\n                window.ngRNDR = {};\n                if (window.ngRNDR.plugins === undefined) {\n                    window.ngRNDR.plugins = {};\n                    if (window.ngRNDR.plugins.renderers === undefined) {\n                        window.ngRNDR.plugins.renderers = {};\n                    }\n                }\n            }\n            window.ngRNDR.plugins.renderers = $.extend({}, window.ngRNDR.plugins.renderers, factory(jQuery));\n            return window.ngRNDR.plugins.renderers;\n        }\n    };\n\n    callWithJQuery(function($) {\n        var gchart_renderers, makeGoogleChart;\n        makeGoogleChart = function(chartType, extraOptions) {\n            return function(pivotData, opts) {\n                var agg, base, base1, colKey, colKeys, dataArray, dataTable, defaults, fullAggName, groupByTitle, h, hAxisTitle, headers, i, j, len, len1, numCharsInHAxis, options, ref, result, returnObject, row, rowKey, rowKeys, title, tree2, vAxisTitle, val, wrapper, x, y;\n                defaults = {\n                    localeStrings: {\n                        vs: \"vs\",\n                        by: \"by\"\n                    },\n                    gchart: {}\n                };\n                opts = $.extend(true, defaults, opts);\n                opts.gchart.height = opts.height + opts.heightOffset;\n                opts.gchart.width = opts.width + opts.widthOffset;\n                if ((base = opts.gchart).width == null) {\n                    base.width = window.innerWidth / 1.4;\n                }\n                if ((base1 = opts.gchart).height == null) {\n                    base1.height = window.innerHeight / 1.4;\n                }\n                rowKeys = pivotData.getRowKeys();\n                if (rowKeys.length === 0) {\n                    rowKeys.push([]);\n                }\n                colKeys = pivotData.getColKeys();\n                if (colKeys.length === 0) {\n                    colKeys.push([]);\n                }\n                fullAggName = pivotData.meta.aggregatorName;\n                if (pivotData.meta.valAttrs.length) {\n                    fullAggName += \"(\" + (pivotData.meta.valAttrs.join(\", \")) + \")\";\n                }\n                headers = (function() {\n                    var i, len, results;\n                    results = [];\n                    for (i = 0, len = rowKeys.length; i < len; i++) {\n                        h = rowKeys[i];\n                        results.push(h.join(\"-\"));\n                    }\n                    return results;\n                })();\n                headers.unshift(\"\");\n                numCharsInHAxis = 0;\n                if (chartType === \"ScatterChart\") {\n                    dataArray = [];\n                    ref = pivotData.meta.tree;\n                    for (y in ref) {\n                        tree2 = ref[y];\n                        for (x in tree2) {\n                            agg = tree2[x];\n                            dataArray.push([parseFloat(x), parseFloat(y), fullAggName + \": \\n\" + agg.format(agg.value())]);\n                        }\n                    }\n                    dataTable = new google.visualization.DataTable();\n                    dataTable.addColumn('number', pivotData.meta.colAttrs.join(\"-\"));\n                    dataTable.addColumn('number', pivotData.meta.rowAttrs.join(\"-\"));\n                    dataTable.addColumn({\n                        type: \"string\",\n                        role: \"tooltip\"\n                    });\n                    dataTable.addRows(dataArray);\n                    hAxisTitle = pivotData.meta.colAttrs.join(\"-\");\n                    vAxisTitle = pivotData.meta.rowAttrs.join(\"-\");\n                    title = \"\";\n                } else {\n                    dataArray = [headers];\n                    for (i = 0, len = colKeys.length; i < len; i++) {\n                        colKey = colKeys[i];\n                        row = [colKey.join(\"-\")];\n                        numCharsInHAxis += row[0].length;\n                        for (j = 0, len1 = rowKeys.length; j < len1; j++) {\n                            rowKey = rowKeys[j];\n                            agg = pivotData.getAggregator(rowKey, colKey);\n                            if (agg.value() != null) {\n                                val = agg.value();\n                                if ($.isNumeric(val)) {\n                                    if (val < 1) {\n                                        row.push(parseFloat(val.toPrecision(3)));\n                                    } else {\n                                        row.push(parseFloat(val.toFixed(3)));\n                                    }\n                                } else {\n                                    row.push(val);\n                                }\n                            } else {\n                                row.push(null);\n                            }\n                        }\n                        dataArray.push(row);\n                    }\n                    dataTable = google.visualization.arrayToDataTable(dataArray);\n                    title = vAxisTitle = fullAggName;\n                    hAxisTitle = pivotData.meta.colAttrs.join(\"-\");\n                    if (hAxisTitle !== \"\") {\n                        title += \" \" + opts.localeStrings.vs + \" \" + hAxisTitle;\n                    }\n                    groupByTitle = pivotData.meta.rowAttrs.join(\"-\");\n                    if (groupByTitle !== \"\") {\n                        title += \" \" + opts.localeStrings.by + \" \" + groupByTitle;\n                    }\n                }\n                options = {\n                    title: title,\n                    hAxis: {\n                        title: hAxisTitle,\n                        slantedText: numCharsInHAxis > 50\n                    },\n                    vAxis: {\n                        title: vAxisTitle\n                    },\n                    tooltip: {\n                        textStyle: {\n                            fontName: 'Arial',\n                            fontSize: 12\n                        }\n                    },\n                    chartArea: {\n                        'width': '80%',\n                        'height': '80%'\n                    }\n                };\n                if (chartType === \"ColumnChart\") {\n                    options.vAxis.minValue = 0;\n                }\n                if (chartType === \"ScatterChart\") {\n                    options.legend = {\n                        position: \"none\"\n                    };\n                } else if (dataArray[0].length === 2 && dataArray[0][1] === \"\") {\n                    options.legend = {\n                        position: \"none\"\n                    };\n                }\n                $.extend(options, opts.gchart, extraOptions);\n                result = $(\"<div>\").css({\n                    width: opts.gchart.width,\n                    height: opts.gchart.height\n                });\n                wrapper = new google.visualization.ChartWrapper({\n                    dataTable: dataTable,\n                    chartType: chartType,\n                    options: options\n                });\n                wrapper.draw(result[0]);\n                result.bind(\"dblclick\", function() {\n                    var editor;\n                    editor = new google.visualization.ChartEditor();\n                    google.visualization.events.addListener(editor, 'ok', function() {\n                        return editor.getChartWrapper().draw(result[0]);\n                    });\n                    return editor.openDialog(wrapper);\n                });\n                return returnObject = {\n                    html: result\n                };\n            };\n        };\n        return gchart_renderers = {\n            \"Line Chart\": makeGoogleChart(\"LineChart\"),\n            \"Bar Chart\": makeGoogleChart(\"ColumnChart\"),\n            \"Stacked Bar Chart\": makeGoogleChart(\"ColumnChart\", {\n                isStacked: true\n            }),\n            \"Area Chart\": makeGoogleChart(\"AreaChart\", {\n                isStacked: true\n            }),\n            \"Scatter Chart\": makeGoogleChart(\"ScatterChart\")\n        };\n    });\n\n}).call(this);\n\n//# sourceMappingURL=gchart_renderers.js.map\n\n//# sourceMappingURL=gchart_renderers.js.map\n"],"sourceRoot":"/source/"}