{"version":3,"sources":["d3_renderers.min.js"],"names":["callWithJQuery","factory","exports","module","require","define","amd","undefined","window","ngRNDR","plugins","renderers","$","extend","jQuery","d3","d3_renderers","Treemap","pivotData","opts","addToTree","color","defaults","height","i","len","ref","result","returnObject","rowKey","tree","treemap","value","width","localeStrings","heightOffset","widthOffset","css","name","children","path","child","newChild","x","length","shift","push","getRowKeys","getAggregator","scale","category10","layout","size","sticky","d","select","append","style","datum","selectAll","data","padding","nodes","enter","attr","text","call","this","y","Math","max","dx","dy","html"],"mappings":"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","file":"d3_renderers.min.js","sourcesContent":["(function() {\n\n  var callWithJQuery;\n\n  callWithJQuery = function(factory) {\n    if (typeof exports === \"object\" && typeof module === \"object\") {\n      return factory(require(\"jquery\"), require(\"d3\"));\n    } else if (typeof define === \"function\" && define.amd) {\n      return define([\"jquery\", \"d3\"], factory);\n    } else {\n      if(window.ngRNDR === undefined){\n        window.ngRNDR = {};\n        if(window.ngRNDR.plugins === undefined){\n          window.ngRNDR.plugins = {};\n          if(window.ngRNDR.plugins.renderers === undefined){\n            window.ngRNDR.plugins.renderers = {};\n          }\n        }\n      }\n      window.ngRNDR.plugins.renderers = $.extend({}, window.ngRNDR.plugins.renderers, factory(jQuery, d3));\n      return window.ngRNDR.plugins.renderers;\n    }\n  };\n\n  callWithJQuery(function($, d3) {\n    var d3_renderers;\n    return d3_renderers = {\n      Treemap: function(pivotData, opts) {\n        var addToTree, color, defaults, height, i, len, ref, result, returnObject, rowKey, tree, treemap, value, width;\n        defaults = {\n          localeStrings: {},\n          d3: {\n            width: function() {\n              return opts.height + opts.heightOffset;\n            },\n            height: function() {\n              return opts.width + opts.widthOffset;\n            }\n          }\n        };\n        opts = $.extend(defaults, opts);\n        result = $(\"<div>\").css({\n          width: opts.d3.width(),\n          height: opts.d3.height()\n        });\n        tree = {\n          name: \"All\",\n          children: []\n        };\n        addToTree = function(tree, path, value) {\n          var child, i, len, newChild, ref, x;\n          if (path.length === 0) {\n            tree.value = value;\n            return;\n          }\n          if (tree.children == null) {\n            tree.children = [];\n          }\n          x = path.shift();\n          ref = tree.children;\n          for (i = 0, len = ref.length; i < len; i++) {\n            child = ref[i];\n            if (!(child.name === x)) {\n              continue;\n            }\n            addToTree(child, path, value);\n            return;\n          }\n          newChild = {\n            name: x\n          };\n          addToTree(newChild, path, value);\n          return tree.children.push(newChild);\n        };\n        ref = pivotData.getRowKeys();\n        for (i = 0, len = ref.length; i < len; i++) {\n          rowKey = ref[i];\n          value = pivotData.getAggregator(rowKey, []).value();\n          if (value != null) {\n            addToTree(tree, rowKey, value);\n          }\n        }\n        color = d3.scale.category10();\n        width = opts.d3.width();\n        height = opts.d3.height();\n        treemap = d3.layout.treemap().size([width, height]).sticky(true).value(function(d) {\n          return d.size;\n        });\n        d3.select(result[0]).append(\"div\").style(\"position\", \"relative\").style(\"width\", width + \"px\").style(\"height\", height + \"px\").datum(tree).selectAll(\".node\").data(treemap.padding([15, 0, 0, 0]).value(function(d) {\n          return d.value;\n        }).nodes).enter().append(\"div\").attr(\"class\", \"node\").style(\"background\", function(d) {\n          if (d.children != null) {\n            return \"lightgrey\";\n          } else {\n            return color(d.name);\n          }\n        }).text(function(d) {\n          return d.name;\n        }).call(function() {\n          this.style(\"left\", function(d) {\n            return d.x + \"px\";\n          }).style(\"top\", function(d) {\n            return d.y + \"px\";\n          }).style(\"width\", function(d) {\n            return Math.max(0, d.dx - 1) + \"px\";\n          }).style(\"height\", function(d) {\n            return Math.max(0, d.dy - 1) + \"px\";\n          });\n        });\n        return returnObject = {\n          html: result\n        };\n      }\n    };\n  });\n\n}).call(this);\n\n//# sourceMappingURL=d3_renderers.js.map\n\n//# sourceMappingURL=d3_renderers.js.map\n"],"sourceRoot":"/source/"}